
apiVersion: netop-manager.cntrlr.netop-manager.io/v1alpha1
kind: Installer
metadata:
  name: installer-aci-cni
spec:
  config:
    networkFunctions:
      cko-cni:
        version: "5.2.3.3"
        type: "cko-cni-aci"
        options:
          aci-cni-specs: apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: acicontainersoperators.aci.ctrl
spec:
  group: aci.ctrl
  names:
    kind: AciContainersOperator
    listKind: AciContainersOperatorList
    plural: acicontainersoperators
    singular: acicontainersoperator
  scope: Namespaced
  versions:
  - name: v1alpha1
    served: true
    storage: true
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        description: acicontainersoperator owns the lifecycle of ACI objects in the cluster
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            description: AciContainersOperatorSpec defines the desired spec for ACI Objects
            properties:
              flavor:
                type: string
              config:
                type: string
            type: object
          status:
            description: AciContainersOperatorStatus defines the successful completion of AciContainersOperator
            properties:
              status:
                type: boolean
            type: object
        required:
        - spec
        type: object
---
apiVersion: v1
kind: Namespace
metadata:
  name: aci-containers-system
  labels:
    aci-containers-config-version: "a188341f-af1c-4894-bdf6-e68aa616ccfa"
    network-plugin: aci-containers
  annotations:
    openshift.io/node-selector: ''
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: nodepodifs.aci.aw
spec:
  group: aci.aw
  names:
    kind: NodePodIF
    listKind: NodePodIFList
    plural: nodepodifs
    singular: nodepodif
  scope: Namespaced
  versions:
  - name: v1
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            properties:
              podifs:
                type: array
                items:
                  type: object
                  properties:
                    containerID:
                      type: string
                    epg:
                      type: string
                    ifname:
                      type: string
                    ipaddr:
                      type: string
                    macaddr:
                      type: string
                    podname:
                      type: string
                    podns:
                      type: string
                    vtep:
                      type: string
        required:
        - spec
        type: object
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: snatglobalinfos.aci.snat
spec:
  group: aci.snat
  names:
    kind: SnatGlobalInfo
    listKind: SnatGlobalInfoList
    plural: snatglobalinfos
    singular: snatglobalinfo
  scope: Namespaced
  versions:
  - name: v1
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        description: SnatGlobalInfo is the Schema for the snatglobalinfos API
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            properties:
              globalInfos:
                additionalProperties:
                  items:
                    properties:
                      macAddress:
                        type: string
                      portRanges:
                        items:
                          properties:
                            end:
                              maximum: 65535
                              minimum: 1
                              type: integer
                            start:
                              maximum: 65535
                              minimum: 1
                              type: integer
                          type: object
                        type: array
                      snatIp:
                        type: string
                      snatIpUid:
                        type: string
                      snatPolicyName:
                        type: string
                    required:
                    - macAddress
                    - portRanges
                    - snatIp
                    - snatIpUid
                    - snatPolicyName
                    type: object
                  type: array
                type: object
            required:
            - globalInfos
            type: object
          status:
            description: SnatGlobalInfoStatus defines the observed state of SnatGlobalInfo
            type: object
        type: object
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: snatlocalinfos.aci.snat
spec:
  group: aci.snat
  names:
    kind: SnatLocalInfo
    listKind: SnatLocalInfoList
    plural: snatlocalinfos
    singular: snatlocalinfo
  scope: Namespaced
  versions:
  - name: v1
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            description: SnatLocalInfoSpec defines the desired state of SnatLocalInfo
            properties:
              localInfos:
                items:
                  properties:
                    podName:
                      type: string
                    podNamespace:
                      type: string
                    podUid:
                      type: string
                    snatPolicies:
                      items:
                        properties:
                          destIp:
                            items:
                              type: string
                            type: array
                          name:
                            type: string
                          snatIp:
                            type: string
                        required:
                        - destIp
                        - name
                        - snatIp
                        type: object
                      type: array
                  required:
                  - podName
                  - podNamespace
                  - podUid
                  - snatPolicies
                  type: object
                type: array
            required:
            - localInfos
            type: object
        type: object
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: snatpolicies.aci.snat
spec:
  group: aci.snat
  names:
    kind: SnatPolicy
    listKind: SnatPolicyList
    plural: snatpolicies
    singular: snatpolicy
  scope: Cluster
  versions:
  - name: v1
    served: true
    storage: true
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        type: object
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            type: object
            properties:
              selector:
                type: object
                properties:
                  labels:
                    type: object
                    description: 'Selection of Pods'
                    properties:
                    additionalProperties:
                      type: string
                  namespace:
                    type: string
                type: object
              snatIp:
                type: array
                items:
                  type: string
              destIp:
                type: array
                items:
                  type: string
            type: object
          status:
            type: object
            properties:
            additionalProperties:
              type: string
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: nodeinfos.aci.snat
spec:
  group: aci.snat
  names:
    kind: NodeInfo
    listKind: NodeInfoList
    plural: nodeinfos
    singular: nodeinfo
  scope: Namespaced
  versions:
  - name: v1
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            properties:
              macaddress:
                type: string
              snatpolicynames:
                additionalProperties:
                  type: boolean
                type: object
            type: object
          status:
            description: NodeinfoStatus defines the observed state of Nodeinfo
            type: object
        type: object
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: rdconfigs.aci.snat
spec:
  group: aci.snat
  names:
    kind: RdConfig
    listKind: RdConfigList
    plural: rdconfigs
    singular: rdconfig
  scope: Namespaced
  versions:
  - name: v1
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            properties:
              discoveredsubnets:
                items:
                  type: string
                type: array
              usersubnets:
                items:
                  type: string
                type: array
            type: object
          status:
            description: NodeinfoStatus defines the observed state of Nodeinfo
            type: object
        type: object
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: networkpolicies.aci.netpol
spec:
  group: aci.netpol
  names:
    kind: NetworkPolicy
    listKind: NetworkPolicyList
    plural: networkpolicies
    singular: networkpolicy
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Network Policy describes traffic flow at IP address or port level
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            properties:
              appliedTo:
                properties:
                  namespaceSelector:
                    properties:
                      matchExpressions:
                        items:
                          properties:
                            key:
                              type: string
                            operator:
                              type: string
                            values:
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        type: object
                    type: object
                  podSelector:
                    description: allow ingress from the same namespace
                    properties:
                      matchExpressions:
                        items:
                          properties:
                            key:
                              type: string
                            operator:
                              type: string
                            values:
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        type: object
                    type: object
                type: object
              egress:
                description: Set of egress rules evaluated based on the order in which they are set.
                items:
                  properties:
                    action:
                      description: Action specifies the action to be applied on the rule.
                      type: string
                    enableLogging:
                      description: EnableLogging is used to indicate if agent should generate logs default to false.
                      type: boolean
                    ports:
                      description: Set of port and protocol allowed/denied by the rule. If this field is unset or empty, this rule matches all ports.
                      items:
                        description: NetworkPolicyPort describes the port and protocol to match in a rule.
                        properties:
                          endPort:
                            description: EndPort defines the end of the port range, being the end included within the range. It can only be specified when a numerical `port` is specified.
                            format: int32
                            type: integer
                          port:
                            anyOf:
                            - type: integer
                            - type: string
                            description: The port on the given protocol. This can be either a numerical or named port on a Pod. If this field is not provided, this matches all port names and numbers.
                            x-kubernetes-int-or-string: true
                          protocol:
                            default: TCP
                            description: The protocol (TCP, UDP, or SCTP) which traffic must match. If not specified, this field defaults to TCP.
                            type: string
                        type: object
                      type: array
                    to:
                      description: Rule is matched if traffic is intended for workloads selected by this field. If this field is empty or missing, this rule matches all destinations.
                      items:
                        properties:
                          ipBlock:
                            description: IPBlock describes the IPAddresses/IPBlocks that is matched in to/from. IPBlock cannot be set as part of the AppliedTo field. Cannot be set with any other selector.
                            properties:
                              cidr:
                                description: CIDR is a string representing the IP Block Valid examples are "192.168.1.1/24" or "2001:db9::/64"
                                type: string
                              except:
                                description: Except is a slice of CIDRs that should not be included within an IP Block Valid examples are "192.168.1.1/24" or "2001:db9::/64" Except values will be rejected if they are outside the CIDR range
                                items:
                                  type: string
                                type: array
                            required:
                            - cidr
                            type: object
                          namespaceSelector:
                            description: Select all Pods from Namespaces matched by this selector, as workloads in To/From fields. If set with PodSelector, Pods are matched from Namespaces matched by the NamespaceSelector. Cannot be set with any other selector except PodSelector or ExternalEntitySelector.
                            properties:
                              matchExpressions:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                type: object
                            type: object
                          podSelector:
                            description: Select Pods from NetworkPolicy's Namespace as workloads in AppliedTo/To/From fields. If set with NamespaceSelector, Pods are matched from Namespaces matched by the NamespaceSelector. Cannot be set with any other selector except NamespaceSelector.
                            properties:
                              matchExpressions:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                type: object
                            type: object
                        type: object
                      type: array
                    toFqDn:
                      properties:
                        matchNames:
                          items:
                            type: string
                          type: array
                      required:
                      - matchNames
                      type: object
                  required:
                  - enableLogging
                  - toFqDn
                  type: object
                type: array
              ingress:
                description: Set of ingress rules evaluated based on the order in which they are set.
                items:
                  properties:
                    action:
                      description: Action specifies the action to be applied on the rule.
                      type: string
                    enableLogging:
                      description: EnableLogging is used to indicate if agent should generate logs when rules are matched. Should be default to false.
                      type: boolean
                    from:
                      description: Rule is matched if traffic originates from workloads selected by this field. If this field is empty, this rule matches all sources.
                      items:
                        properties:
                          ipBlock:
                            description: IPBlock describes the IPAddresses/IPBlocks that is matched in to/from. IPBlock cannot be set as part of the AppliedTo field. Cannot be set with any other selector.
                            properties:
                              cidr:
                                description: CIDR is a string representing the IP Block Valid examples are "192.168.1.1/24" or "2001:db9::/64"
                                type: string
                              except:
                                description: Except is a slice of CIDRs that should not be included within an IP Block Valid examples are "192.168.1.1/24" or "2001:db9::/64" Except values will be rejected if they are outside the CIDR range
                                items:
                                  type: string
                                type: array
                            required:
                            - cidr
                            type: object
                          namespaceSelector:
                            properties:
                              matchExpressions:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                type: object
                            type: object
                          podSelector:
                            description: Select Pods from NetworkPolicy's Namespace as workloads in AppliedTo/To/From fields. If set with NamespaceSelector, Pods are matched from Namespaces matched by the NamespaceSelector. Cannot be set with any other selector except NamespaceSelector.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                items:
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                type: object
                            type: object
                        type: object
                      type: array
                    ports:
                      description: Set of port and protocol allowed/denied by the rule. If this field is unset or empty, this rule matches all ports.
                      items:
                        description: NetworkPolicyPort describes the port and protocol to match in a rule.
                        properties:
                          endPort:
                            description: EndPort defines the end of the port range, being the end included within the range. It can only be specified when a numerical `port` is specified.
                            format: int32
                            type: integer
                          port:
                            anyOf:
                            - type: integer
                            - type: string
                            description: The port on the given protocol. This can be either a numerical or named port on a Pod. If this field is not provided, this matches all port names and numbers.
                            x-kubernetes-int-or-string: true
                          protocol:
                            default: TCP
                            description: The protocol (TCP, UDP, or SCTP) which traffic must match. If not specified, this field defaults to TCP.
                            type: string
                        type: object
                      type: array
                  type: object
                type: array
              policyTypes:
                items:
                  description: Policy Type string describes the NetworkPolicy type This type is beta-level in 1.8
                  type: string
                type: array
              priority:
                description: Priority specfies the order of the NetworkPolicy relative to other NetworkPolicies.
                type: integer
              type:
                description: type of the policy.
                type: string
            required:
            - type
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: dnsnetworkpolicies.aci.dnsnetpol
spec:
  group: aci.dnsnetpol
  names:
    kind: DnsNetworkPolicy
    listKind: DnsNetworkPolicyList
    plural: dnsnetworkpolicies
    singular: dnsnetworkpolicy
  scope: Namespaced
  versions:
  - name: v1beta
    schema:
      openAPIV3Schema:
        description: dns network Policy
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            properties:
              appliedTo:
                properties:
                  namespaceSelector:
                    properties:
                      matchExpressions:
                        items:
                          properties:
                            key:
                              type: string
                            operator:
                              type: string
                            values:
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        type: object
                    type: object
                  podSelector:
                    description: allow ingress from the same namespace
                    properties:
                      matchExpressions:
                        items:
                          properties:
                            key:
                              type: string
                            operator:
                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        type: object
                    type: object
                type: object
              egress:
                description: Set of egress rules evaluated based on the order in which they are set.
                properties:
                  toFqdn:
                    properties:
                      matchNames:
                        items:
                          type: string
                        type: array
                    required:
                    - matchNames
                    type: object
                required:
                - toFqdn
                type: object
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: qospolicies.aci.qos
spec:
  group: aci.qos
  names:
    kind: QosPolicy
    listKind: QosPolicyList
    plural: qospolicies
    singular: qospolicy
  scope: Namespaced
  preserveUnknownFields: false
  versions:
  - name: v1
    served: true
    storage: true
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        type: object
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          spec:
            type: object
            properties:
              podSelector:
                description: 'Selection of Pods'
                type: object
                properties:
                  matchLabels:
                    type: object
                    description:
              ingress:
                type: object
                properties:
                  policing_rate:
                    type: integer
                    minimum: 0
                  policing_burst:
                    type: integer
                    minimum: 0
              egress:
                type: object
                properties:
                  policing_rate:
                    type: integer
                    minimum: 0
                  policing_burst:
                    type: integer
                    minimum: 0
              dscpmark:
                type: integer
                default: 0
                minimum: 0
                maximum: 63
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: netflowpolicies.aci.netflow
spec:
  group: aci.netflow
  names:
    kind: NetflowPolicy
    listKind: NetflowPolicyList
    plural: netflowpolicies
    singular: netflowpolicy
  scope: Cluster
  preserveUnknownFields: false
  versions:
  - name: v1alpha
    served: true
    storage: true
    schema:
   # openAPIV3Schema is the schema for validating custom objects.
      openAPIV3Schema:
        type: object
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          spec:
            type: object
            properties:
              flowSamplingPolicy:
                type: object
                properties:
                  destIp:
                    type: string
                  destPort:
                    type: integer
                    minimum: 0
                    maximum: 65535
                    default: 2055
                  flowType:
                    type: string
                    enum:
                      - netflow
                      - ipfix
                    default: netflow
                  activeFlowTimeOut:
                    type: integer
                    minimum: 0
                    maximum: 3600
                    default: 60
                  idleFlowTimeOut:
                    type: integer
                    minimum: 0
                    maximum: 600
                    default: 15
                  samplingRate:
                    type: integer
                    minimum: 0
                    maximum: 1000
                    default: 0
                required:
                - destIp
                type: object
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: erspanpolicies.aci.erspan
spec:
  group: aci.erspan
  names:
    kind: ErspanPolicy
    listKind: ErspanPolicyList
    plural: erspanpolicies
    singular: erspanpolicy
  scope: Cluster
  preserveUnknownFields: false
  versions:
  - name: v1alpha
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          spec:
            type: object
            properties:
              selector:
                type: object
                description: 'Selection of Pods'
                properties:
                  labels:
                    type: object
                    properties:
                    additionalProperties:
                      type: string
                  namespace:
                    type: string
              source:
                type: object
                properties:
                  adminState:
                    description: Administrative state.
                    default: start
                    type: string
                    enum:
                      - start
                      - stop
                  direction:
                    description: Direction of the packets to monitor.
                    default: both
                    type: string
                    enum:
                      - in
                      - out
                      - both
              destination:
                type: object
                properties:
                  destIP:
                    description: Destination IP of the ERSPAN packet.
                    type: string
                  flowID:
                    description: Unique flow ID of the ERSPAN packet.
                    default: 1
                    type: integer
                    minimum: 1
                    maximum: 1023
                required:
                - destIP
                type: object
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: enabledroplogs.aci.droplog
spec:
  group: aci.droplog
  names:
    kind: EnableDropLog
    listKind: EnableDropLogList
    plural: enabledroplogs
    singular: enabledroplog
  scope: Cluster
  versions:
  - name: v1alpha1
    served: true
    storage: true
    schema:
   # openAPIV3Schema is the schema for validating custom objects.
      openAPIV3Schema:
        type: object
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          spec:
            description: Defines the desired state of EnableDropLog
            type: object
            properties:
              disableDefaultDropLog:
                description: Disables the default droplog enabled by acc-provision.
                default: false
                type: boolean
              nodeSelector:
                type: object
                description: Drop logging is enabled on nodes selected based on labels
                properties:
                  labels:
                    type: object
                    properties:
                    additionalProperties:
                      type: string
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: prunedroplogs.aci.droplog
spec:
  group: aci.droplog
  names:
    kind: PruneDropLog
    listKind: PruneDropLogList
    plural: prunedroplogs
    singular: prunedroplog
  scope: Cluster
  versions:
  - name: v1alpha1
    served: true
    storage: true
    schema:
   # openAPIV3Schema is the schema for validating custom objects.
      openAPIV3Schema:
        type: object
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          spec:
            description: Defines the desired state of PruneDropLog
            type: object
            properties:
              nodeSelector:
                type: object
                description: Drop logging filters are applied to nodes selected based on labels
                properties:
                  labels:
                    type: object
                    properties:
                    additionalProperties:
                      type: string
              dropLogFilters:
                type: object
                properties:
                  srcIP:
                    type: string
                  destIP:
                    type: string
                  srcMAC:
                    type: string
                  destMAC:
                    type: string
                  srcPort:
                    type: integer
                  destPort:
                    type: integer
                  ipProto:
                    type: integer
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: accprovisioninputs.aci.ctrl
spec:
  group: aci.ctrl
  names:
    kind: AccProvisionInput
    listKind: AccProvisionInputList
    plural: accprovisioninputs
    singular: accprovisioninput
  scope: Namespaced
  versions:
  - name: v1alpha1
    served: true
    storage: true
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        description: accprovisioninput defines the input configuration for ACI CNI
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            description: AccProvisionInputSpec defines the desired spec for accprovisioninput object
            properties:
              acc_provision_input:
                type: object
                properties:
                  operator_managed_config:
                    type: object
                    properties:
                      enable_updates:
                        type: boolean
                  aci_config:
                    type: object
                    properties:
                      sync_login:
                        type: object
                        properties:
                          certfile:
                            type: string
                          keyfile:
                            type: string
                      client_ssl:
                        type: boolean
                  net_config:
                    type: object
                    properties:
                      interface_mtu:
                        type: integer
                      service_monitor_interval:
                        type: integer
                      pbr_tracking_non_snat:
                        type: boolean
                      pod_subnet_chunk_size:
                        type: integer
                      disable_wait_for_network:
                        type: boolean
                      duration_wait_for_network:
                        type: integer
                  registry:
                    type: object
                    properties:
                      image_prefix:
                        type: string
                      image_pull_secret:
                        type: string
                      aci_containers_operator_version:
                        type: string
                      aci_containers_controller_version:
                        type: string
                      aci_containers_host_version:
                        type: string
                      acc_provision_operator_version:
                        type: string
                      aci_cni_operator_version:
                        type: string
                      cnideploy_version:
                        type: string
                      opflex_agent_version:
                        type: string
                      openvswitch_version:
                        type: string
                      gbp_version:
                        type: string
                  logging:
                    type: object
                    properties:
                      size:
                        type: integer
                      controller_log_level:
                        type: string
                      hostagent_log_level:
                        type: string
                      opflexagent_log_level:
                        type: string
                  istio_config:
                    type: object
                    properties:
                      install_istio:
                        type: boolean
                      install_profile:
                        type: string
                  multus:
                    type: object
                    properties:
                      disable:
                        type: boolean
                  drop_log_config:
                    type: object
                    properties:
                      enable:
                        type: boolean
                  nodepodif_config:
                    type: object
                    properties:
                      enable:
                        type: boolean
                  sriov_config:
                    type: object
                    properties:
                      enable:
                        type: boolean
                  kube_config:
                    type: object
                    properties:
                      ovs_memory_limit:
                        type: string
                      use_privileged_containers:
                        type: boolean
                      image_pull_policy:
                        type: string
                      reboot_opflex_with_ovs:
                        type: string
                      snat_operator:
                        type: object
                        properties:
                          port_range:
                            type: object
                            properties:
                              start:
                                type: integer
                              end:
                                type: integer
                              ports_per_node:
                                type: integer
                          contract_scope:
                            type: string
                          disable_periodic_snat_global_info_sync:
                            type: boolean
            type: object
          status:
            description: AccProvisionInputStatus defines the successful completion of AccProvisionInput
            properties:
              status:
                type: boolean
            type: object
        required:
        - spec
        type: object
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: aci-operator-config
  namespace: aci-containers-system
  labels:
    aci-containers-config-version: "a188341f-af1c-4894-bdf6-e68aa616ccfa"
    network-plugin: aci-containers
data:
  spec: |-
    {
        "flavor": "kubernetes-1.24",
        "config": "CmFwaVZlcnNpb246IHYxCmtpbmQ6IE5hbWVzcGFjZQptZXRhZGF0YToKICBuYW1lOiBhY2ktY29udGFpbmVycy1zeXN0ZW0KICBsYWJlbHM6CiAgICBhY2ktY29udGFpbmVycy1jb25maWctdmVyc2lvbjogImExODgzNDFmLWFmMWMtNDg5NC1iZGY2LWU2OGFhNjE2Y2NmYSIKICAgIG5ldHdvcmstcGx1Z2luOiBhY2ktY29udGFpbmVycwogIGFubm90YXRpb25zOgogICAgb3BlbnNoaWZ0LmlvL25vZGUtc2VsZWN0b3I6ICcnCi0tLQphcGlWZXJzaW9uOiBhcGlleHRlbnNpb25zLms4cy5pby92MQpraW5kOiBDdXN0b21SZXNvdXJjZURlZmluaXRpb24KbWV0YWRhdGE6CiAgbmFtZTogbm9kZXBvZGlmcy5hY2kuYXcKc3BlYzoKICBncm91cDogYWNpLmF3CiAgbmFtZXM6CiAgICBraW5kOiBOb2RlUG9kSUYKICAgIGxpc3RLaW5kOiBOb2RlUG9kSUZMaXN0CiAgICBwbHVyYWw6IG5vZGVwb2RpZnMKICAgIHNpbmd1bGFyOiBub2RlcG9kaWYKICBzY29wZTogTmFtZXNwYWNlZAogIHZlcnNpb25zOgogIC0gbmFtZTogdjEKICAgIHNlcnZlZDogdHJ1ZQogICAgc3RvcmFnZTogdHJ1ZQogICAgc2NoZW1hOgogICAgICBvcGVuQVBJVjNTY2hlbWE6CiAgICAgICAgcHJvcGVydGllczoKICAgICAgICAgIGFwaVZlcnNpb246CiAgICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAga2luZDoKICAgICAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgICBtZXRhZGF0YToKICAgICAgICAgICAgdHlwZTogb2JqZWN0CiAgICAgICAgICBzcGVjOgogICAgICAgICAgICB0eXBlOiBvYmplY3QKICAgICAgICAgICAgcHJvcGVydGllczoKICAgICAgICAgICAgICBwb2RpZnM6CiAgICAgICAgICAgICAgICB0eXBlOiBhcnJheQogICAgICAgICAgICAgICAgaXRlbXM6CiAgICAgICAgICAgICAgICAgIHR5cGU6IG9iamVjdAogICAgICAgICAgICAgICAgICBwcm9wZXJ0aWVzOgogICAgICAgICAgICAgICAgICAgIGNvbnRhaW5lcklEOgogICAgICAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgICAgICAgICAgICAgZXBnOgogICAgICAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgICAgICAgICAgICAgaWZuYW1lOgogICAgICAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgICAgICAgICAgICAgaXBhZGRyOgogICAgICAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgICAgICAgICAgICAgbWFjYWRkcjoKICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAgICAgICAgICAgIHBvZG5hbWU6CiAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICAgICAgICAgICAgICBwb2RuczoKICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAgICAgICAgICAgIHZ0ZXA6CiAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICByZXF1aXJlZDoKICAgICAgICAtIHNwZWMKICAgICAgICB0eXBlOiBvYmplY3QKLS0tCmFwaVZlcnNpb246IGFwaWV4dGVuc2lvbnMuazhzLmlvL3YxCmtpbmQ6IEN1c3RvbVJlc291cmNlRGVmaW5pdGlvbgptZXRhZGF0YToKICBuYW1lOiBzbmF0Z2xvYmFsaW5mb3MuYWNpLnNuYXQKc3BlYzoKICBncm91cDogYWNpLnNuYXQKICBuYW1lczoKICAgIGtpbmQ6IFNuYXRHbG9iYWxJbmZvCiAgICBsaXN0S2luZDogU25hdEdsb2JhbEluZm9MaXN0CiAgICBwbHVyYWw6IHNuYXRnbG9iYWxpbmZvcwogICAgc2luZ3VsYXI6IHNuYXRnbG9iYWxpbmZvCiAgc2NvcGU6IE5hbWVzcGFjZWQKICB2ZXJzaW9uczoKICAtIG5hbWU6IHYxCiAgICBzZXJ2ZWQ6IHRydWUKICAgIHN0b3JhZ2U6IHRydWUKICAgIHNjaGVtYToKICAgICAgb3BlbkFQSVYzU2NoZW1hOgogICAgICAgIGRlc2NyaXB0aW9uOiBTbmF0R2xvYmFsSW5mbyBpcyB0aGUgU2NoZW1hIGZvciB0aGUgc25hdGdsb2JhbGluZm9zIEFQSQogICAgICAgIHByb3BlcnRpZXM6CiAgICAgICAgICBhcGlWZXJzaW9uOgogICAgICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICAgIGtpbmQ6CiAgICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAgbWV0YWRhdGE6CiAgICAgICAgICAgIHR5cGU6IG9iamVjdAogICAgICAgICAgc3BlYzoKICAgICAgICAgICAgcHJvcGVydGllczoKICAgICAgICAgICAgICBnbG9iYWxJbmZvczoKICAgICAgICAgICAgICAgIGFkZGl0aW9uYWxQcm9wZXJ0aWVzOgogICAgICAgICAgICAgICAgICBpdGVtczoKICAgICAgICAgICAgICAgICAgICBwcm9wZXJ0aWVzOgogICAgICAgICAgICAgICAgICAgICAgbWFjQWRkcmVzczoKICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgICAgICAgICAgICAgICBwb3J0UmFuZ2VzOgogICAgICAgICAgICAgICAgICAgICAgICBpdGVtczoKICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9wZXJ0aWVzOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5kOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXhpbXVtOiA2NTUzNQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtaW5pbXVtOiAxCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IGludGVnZXIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXJ0OgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXhpbXVtOiA2NTUzNQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtaW5pbXVtOiAxCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IGludGVnZXIKICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBvYmplY3QKICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogYXJyYXkKICAgICAgICAgICAgICAgICAgICAgIHNuYXRJcDoKICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgICAgICAgICAgICAgICBzbmF0SXBVaWQ6CiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAgICAgICAgICAgICAgc25hdFBvbGljeU5hbWU6CiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOgogICAgICAgICAgICAgICAgICAgIC0gbWFjQWRkcmVzcwogICAgICAgICAgICAgICAgICAgIC0gcG9ydFJhbmdlcwogICAgICAgICAgICAgICAgICAgIC0gc25hdElwCiAgICAgICAgICAgICAgICAgICAgLSBzbmF0SXBVaWQKICAgICAgICAgICAgICAgICAgICAtIHNuYXRQb2xpY3lOYW1lCiAgICAgICAgICAgICAgICAgICAgdHlwZTogb2JqZWN0CiAgICAgICAgICAgICAgICAgIHR5cGU6IGFycmF5CiAgICAgICAgICAgICAgICB0eXBlOiBvYmplY3QKICAgICAgICAgICAgcmVxdWlyZWQ6CiAgICAgICAgICAgIC0gZ2xvYmFsSW5mb3MKICAgICAgICAgICAgdHlwZTogb2JqZWN0CiAgICAgICAgICBzdGF0dXM6CiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBTbmF0R2xvYmFsSW5mb1N0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBTbmF0R2xvYmFsSW5mbwogICAgICAgICAgICB0eXBlOiBvYmplY3QKICAgICAgICB0eXBlOiBvYmplY3QKLS0tCmFwaVZlcnNpb246IGFwaWV4dGVuc2lvbnMuazhzLmlvL3YxCmtpbmQ6IEN1c3RvbVJlc291cmNlRGVmaW5pdGlvbgptZXRhZGF0YToKICBuYW1lOiBzbmF0bG9jYWxpbmZvcy5hY2kuc25hdApzcGVjOgogIGdyb3VwOiBhY2kuc25hdAogIG5hbWVzOgogICAga2luZDogU25hdExvY2FsSW5mbwogICAgbGlzdEtpbmQ6IFNuYXRMb2NhbEluZm9MaXN0CiAgICBwbHVyYWw6IHNuYXRsb2NhbGluZm9zCiAgICBzaW5ndWxhcjogc25hdGxvY2FsaW5mbwogIHNjb3BlOiBOYW1lc3BhY2VkCiAgdmVyc2lvbnM6CiAgLSBuYW1lOiB2MQogICAgc2VydmVkOiB0cnVlCiAgICBzdG9yYWdlOiB0cnVlCiAgICBzY2hlbWE6CiAgICAgIG9wZW5BUElWM1NjaGVtYToKICAgICAgICBwcm9wZXJ0aWVzOgogICAgICAgICAgYXBpVmVyc2lvbjoKICAgICAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgICBraW5kOgogICAgICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICAgIG1ldGFkYXRhOgogICAgICAgICAgICB0eXBlOiBvYmplY3QKICAgICAgICAgIHNwZWM6CiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBTbmF0TG9jYWxJbmZvU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIFNuYXRMb2NhbEluZm8KICAgICAgICAgICAgcHJvcGVydGllczoKICAgICAgICAgICAgICBsb2NhbEluZm9zOgogICAgICAgICAgICAgICAgaXRlbXM6CiAgICAgICAgICAgICAgICAgIHByb3BlcnRpZXM6CiAgICAgICAgICAgICAgICAgICAgcG9kTmFtZToKICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAgICAgICAgICAgIHBvZE5hbWVzcGFjZToKICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAgICAgICAgICAgIHBvZFVpZDoKICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAgICAgICAgICAgIHNuYXRQb2xpY2llczoKICAgICAgICAgICAgICAgICAgICAgIGl0ZW1zOgogICAgICAgICAgICAgICAgICAgICAgICBwcm9wZXJ0aWVzOgogICAgICAgICAgICAgICAgICAgICAgICAgIGRlc3RJcDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW1zOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IGFycmF5CiAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAgICAgICAgICAgICAgICAgIHNuYXRJcDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDoKICAgICAgICAgICAgICAgICAgICAgICAgLSBkZXN0SXAKICAgICAgICAgICAgICAgICAgICAgICAgLSBuYW1lCiAgICAgICAgICAgICAgICAgICAgICAgIC0gc25hdElwCiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IG9iamVjdAogICAgICAgICAgICAgICAgICAgICAgdHlwZTogYXJyYXkKICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6CiAgICAgICAgICAgICAgICAgIC0gcG9kTmFtZQogICAgICAgICAgICAgICAgICAtIHBvZE5hbWVzcGFjZQogICAgICAgICAgICAgICAgICAtIHBvZFVpZAogICAgICAgICAgICAgICAgICAtIHNuYXRQb2xpY2llcwogICAgICAgICAgICAgICAgICB0eXBlOiBvYmplY3QKICAgICAgICAgICAgICAgIHR5cGU6IGFycmF5CiAgICAgICAgICAgIHJlcXVpcmVkOgogICAgICAgICAgICAtIGxvY2FsSW5mb3MKICAgICAgICAgICAgdHlwZTogb2JqZWN0CiAgICAgICAgdHlwZTogb2JqZWN0Ci0tLQphcGlWZXJzaW9uOiBhcGlleHRlbnNpb25zLms4cy5pby92MQpraW5kOiBDdXN0b21SZXNvdXJjZURlZmluaXRpb24KbWV0YWRhdGE6CiAgbmFtZTogc25hdHBvbGljaWVzLmFjaS5zbmF0CnNwZWM6CiAgZ3JvdXA6IGFjaS5zbmF0CiAgbmFtZXM6CiAgICBraW5kOiBTbmF0UG9saWN5CiAgICBsaXN0S2luZDogU25hdFBvbGljeUxpc3QKICAgIHBsdXJhbDogc25hdHBvbGljaWVzCiAgICBzaW5ndWxhcjogc25hdHBvbGljeQogIHNjb3BlOiBDbHVzdGVyCiAgdmVyc2lvbnM6CiAgLSBuYW1lOiB2MQogICAgc2VydmVkOiB0cnVlCiAgICBzdG9yYWdlOiB0cnVlCiAgICBzdWJyZXNvdXJjZXM6CiAgICAgIHN0YXR1czoge30KICAgIHNjaGVtYToKICAgICAgb3BlbkFQSVYzU2NoZW1hOgogICAgICAgIHR5cGU6IG9iamVjdAogICAgICAgIHByb3BlcnRpZXM6CiAgICAgICAgICBhcGlWZXJzaW9uOgogICAgICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICAgIGtpbmQ6CiAgICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAgbWV0YWRhdGE6CiAgICAgICAgICAgIHR5cGU6IG9iamVjdAogICAgICAgICAgc3BlYzoKICAgICAgICAgICAgdHlwZTogb2JqZWN0CiAgICAgICAgICAgIHByb3BlcnRpZXM6CiAgICAgICAgICAgICAgc2VsZWN0b3I6CiAgICAgICAgICAgICAgICB0eXBlOiBvYmplY3QKICAgICAgICAgICAgICAgIHByb3BlcnRpZXM6CiAgICAgICAgICAgICAgICAgIGxhYmVsczoKICAgICAgICAgICAgICAgICAgICB0eXBlOiBvYmplY3QKICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogJ1NlbGVjdGlvbiBvZiBQb2RzJwogICAgICAgICAgICAgICAgICAgIHByb3BlcnRpZXM6CiAgICAgICAgICAgICAgICAgICAgYWRkaXRpb25hbFByb3BlcnRpZXM6CiAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICAgICAgICAgICAgbmFtZXNwYWNlOgogICAgICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAgICAgICAgdHlwZTogb2JqZWN0CiAgICAgICAgICAgICAgc25hdElwOgogICAgICAgICAgICAgICAgdHlwZTogYXJyYXkKICAgICAgICAgICAgICAgIGl0ZW1zOgogICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICAgICAgICBkZXN0SXA6CiAgICAgICAgICAgICAgICB0eXBlOiBhcnJheQogICAgICAgICAgICAgICAgaXRlbXM6CiAgICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAgICB0eXBlOiBvYmplY3QKICAgICAgICAgIHN0YXR1czoKICAgICAgICAgICAgdHlwZTogb2JqZWN0CiAgICAgICAgICAgIHByb3BlcnRpZXM6CiAgICAgICAgICAgIGFkZGl0aW9uYWxQcm9wZXJ0aWVzOgogICAgICAgICAgICAgIHR5cGU6IHN0cmluZwotLS0KYXBpVmVyc2lvbjogYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEKa2luZDogQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uCm1ldGFkYXRhOgogIG5hbWU6IG5vZGVpbmZvcy5hY2kuc25hdApzcGVjOgogIGdyb3VwOiBhY2kuc25hdAogIG5hbWVzOgogICAga2luZDogTm9kZUluZm8KICAgIGxpc3RLaW5kOiBOb2RlSW5mb0xpc3QKICAgIHBsdXJhbDogbm9kZWluZm9zCiAgICBzaW5ndWxhcjogbm9kZWluZm8KICBzY29wZTogTmFtZXNwYWNlZAogIHZlcnNpb25zOgogIC0gbmFtZTogdjEKICAgIHNlcnZlZDogdHJ1ZQogICAgc3RvcmFnZTogdHJ1ZQogICAgc2NoZW1hOgogICAgICBvcGVuQVBJVjNTY2hlbWE6CiAgICAgICAgcHJvcGVydGllczoKICAgICAgICAgIGFwaVZlcnNpb246CiAgICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAga2luZDoKICAgICAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgICBtZXRhZGF0YToKICAgICAgICAgICAgdHlwZTogb2JqZWN0CiAgICAgICAgICBzcGVjOgogICAgICAgICAgICBwcm9wZXJ0aWVzOgogICAgICAgICAgICAgIG1hY2FkZHJlc3M6CiAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICAgICAgICBzbmF0cG9saWN5bmFtZXM6CiAgICAgICAgICAgICAgICBhZGRpdGlvbmFsUHJvcGVydGllczoKICAgICAgICAgICAgICAgICAgdHlwZTogYm9vbGVhbgogICAgICAgICAgICAgICAgdHlwZTogb2JqZWN0CiAgICAgICAgICAgIHR5cGU6IG9iamVjdAogICAgICAgICAgc3RhdHVzOgogICAgICAgICAgICBkZXNjcmlwdGlvbjogTm9kZWluZm9TdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgTm9kZWluZm8KICAgICAgICAgICAgdHlwZTogb2JqZWN0CiAgICAgICAgdHlwZTogb2JqZWN0Ci0tLQphcGlWZXJzaW9uOiBhcGlleHRlbnNpb25zLms4cy5pby92MQpraW5kOiBDdXN0b21SZXNvdXJjZURlZmluaXRpb24KbWV0YWRhdGE6CiAgbmFtZTogcmRjb25maWdzLmFjaS5zbmF0CnNwZWM6CiAgZ3JvdXA6IGFjaS5zbmF0CiAgbmFtZXM6CiAgICBraW5kOiBSZENvbmZpZwogICAgbGlzdEtpbmQ6IFJkQ29uZmlnTGlzdAogICAgcGx1cmFsOiByZGNvbmZpZ3MKICAgIHNpbmd1bGFyOiByZGNvbmZpZwogIHNjb3BlOiBOYW1lc3BhY2VkCiAgdmVyc2lvbnM6CiAgLSBuYW1lOiB2MQogICAgc2VydmVkOiB0cnVlCiAgICBzdG9yYWdlOiB0cnVlCiAgICBzY2hlbWE6CiAgICAgIG9wZW5BUElWM1NjaGVtYToKICAgICAgICBwcm9wZXJ0aWVzOgogICAgICAgICAgYXBpVmVyc2lvbjoKICAgICAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgICBraW5kOgogICAgICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICAgIG1ldGFkYXRhOgogICAgICAgICAgICB0eXBlOiBvYmplY3QKICAgICAgICAgIHNwZWM6CiAgICAgICAgICAgIHByb3BlcnRpZXM6CiAgICAgICAgICAgICAgZGlzY292ZXJlZHN1Ym5ldHM6CiAgICAgICAgICAgICAgICBpdGVtczoKICAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgICAgICAgICB0eXBlOiBhcnJheQogICAgICAgICAgICAgIHVzZXJzdWJuZXRzOgogICAgICAgICAgICAgICAgaXRlbXM6CiAgICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAgICAgICAgdHlwZTogYXJyYXkKICAgICAgICAgICAgdHlwZTogb2JqZWN0CiAgICAgICAgICBzdGF0dXM6CiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBOb2RlaW5mb1N0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBOb2RlaW5mbwogICAgICAgICAgICB0eXBlOiBvYmplY3QKICAgICAgICB0eXBlOiBvYmplY3QKLS0tCmFwaVZlcnNpb246IGFwaWV4dGVuc2lvbnMuazhzLmlvL3YxCmtpbmQ6IEN1c3RvbVJlc291cmNlRGVmaW5pdGlvbgptZXRhZGF0YToKICBuYW1lOiBuZXR3b3JrcG9saWNpZXMuYWNpLm5ldHBvbApzcGVjOgogIGdyb3VwOiBhY2kubmV0cG9sCiAgbmFtZXM6CiAgICBraW5kOiBOZXR3b3JrUG9saWN5CiAgICBsaXN0S2luZDogTmV0d29ya1BvbGljeUxpc3QKICAgIHBsdXJhbDogbmV0d29ya3BvbGljaWVzCiAgICBzaW5ndWxhcjogbmV0d29ya3BvbGljeQogIHNjb3BlOiBOYW1lc3BhY2VkCiAgdmVyc2lvbnM6CiAgLSBuYW1lOiB2MQogICAgc2NoZW1hOgogICAgICBvcGVuQVBJVjNTY2hlbWE6CiAgICAgICAgZGVzY3JpcHRpb246IE5ldHdvcmsgUG9saWN5IGRlc2NyaWJlcyB0cmFmZmljIGZsb3cgYXQgSVAgYWRkcmVzcyBvciBwb3J0IGxldmVsCiAgICAgICAgcHJvcGVydGllczoKICAgICAgICAgIGFwaVZlcnNpb246CiAgICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAga2luZDoKICAgICAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgICBtZXRhZGF0YToKICAgICAgICAgICAgdHlwZTogb2JqZWN0CiAgICAgICAgICBzcGVjOgogICAgICAgICAgICBwcm9wZXJ0aWVzOgogICAgICAgICAgICAgIGFwcGxpZWRUbzoKICAgICAgICAgICAgICAgIHByb3BlcnRpZXM6CiAgICAgICAgICAgICAgICAgIG5hbWVzcGFjZVNlbGVjdG9yOgogICAgICAgICAgICAgICAgICAgIHByb3BlcnRpZXM6CiAgICAgICAgICAgICAgICAgICAgICBtYXRjaEV4cHJlc3Npb25zOgogICAgICAgICAgICAgICAgICAgICAgICBpdGVtczoKICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9wZXJ0aWVzOgogICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5OgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wZXJhdG9yOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlczoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbXM6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IGFycmF5CiAgICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6CiAgICAgICAgICAgICAgICAgICAgICAgICAgLSBrZXkKICAgICAgICAgICAgICAgICAgICAgICAgICAtIG9wZXJhdG9yCiAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogb2JqZWN0CiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IGFycmF5CiAgICAgICAgICAgICAgICAgICAgICBtYXRjaExhYmVsczoKICAgICAgICAgICAgICAgICAgICAgICAgYWRkaXRpb25hbFByb3BlcnRpZXM6CiAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IG9iamVjdAogICAgICAgICAgICAgICAgICAgIHR5cGU6IG9iamVjdAogICAgICAgICAgICAgICAgICBwb2RTZWxlY3RvcjoKICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogYWxsb3cgaW5ncmVzcyBmcm9tIHRoZSBzYW1lIG5hbWVzcGFjZQogICAgICAgICAgICAgICAgICAgIHByb3BlcnRpZXM6CiAgICAgICAgICAgICAgICAgICAgICBtYXRjaEV4cHJlc3Npb25zOgogICAgICAgICAgICAgICAgICAgICAgICBpdGVtczoKICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9wZXJ0aWVzOgogICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5OgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wZXJhdG9yOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlczoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbXM6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IGFycmF5CiAgICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6CiAgICAgICAgICAgICAgICAgICAgICAgICAgLSBrZXkKICAgICAgICAgICAgICAgICAgICAgICAgICAtIG9wZXJhdG9yCiAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogb2JqZWN0CiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IGFycmF5CiAgICAgICAgICAgICAgICAgICAgICBtYXRjaExhYmVsczoKICAgICAgICAgICAgICAgICAgICAgICAgYWRkaXRpb25hbFByb3BlcnRpZXM6CiAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IG9iamVjdAogICAgICAgICAgICAgICAgICAgIHR5cGU6IG9iamVjdAogICAgICAgICAgICAgICAgdHlwZTogb2JqZWN0CiAgICAgICAgICAgICAgZWdyZXNzOgogICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IFNldCBvZiBlZ3Jlc3MgcnVsZXMgZXZhbHVhdGVkIGJhc2VkIG9uIHRoZSBvcmRlciBpbiB3aGljaCB0aGV5IGFyZSBzZXQuCiAgICAgICAgICAgICAgICBpdGVtczoKICAgICAgICAgICAgICAgICAgcHJvcGVydGllczoKICAgICAgICAgICAgICAgICAgICBhY3Rpb246CiAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogQWN0aW9uIHNwZWNpZmllcyB0aGUgYWN0aW9uIHRvIGJlIGFwcGxpZWQgb24gdGhlIHJ1bGUuCiAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICAgICAgICAgICAgICBlbmFibGVMb2dnaW5nOgogICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IEVuYWJsZUxvZ2dpbmcgaXMgdXNlZCB0byBpbmRpY2F0ZSBpZiBhZ2VudCBzaG91bGQgZ2VuZXJhdGUgbG9ncyBkZWZhdWx0IHRvIGZhbHNlLgogICAgICAgICAgICAgICAgICAgICAgdHlwZTogYm9vbGVhbgogICAgICAgICAgICAgICAgICAgIHBvcnRzOgogICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IFNldCBvZiBwb3J0IGFuZCBwcm90b2NvbCBhbGxvd2VkL2RlbmllZCBieSB0aGUgcnVsZS4gSWYgdGhpcyBmaWVsZCBpcyB1bnNldCBvciBlbXB0eSwgdGhpcyBydWxlIG1hdGNoZXMgYWxsIHBvcnRzLgogICAgICAgICAgICAgICAgICAgICAgaXRlbXM6CiAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBOZXR3b3JrUG9saWN5UG9ydCBkZXNjcmliZXMgdGhlIHBvcnQgYW5kIHByb3RvY29sIHRvIG1hdGNoIGluIGEgcnVsZS4KICAgICAgICAgICAgICAgICAgICAgICAgcHJvcGVydGllczoKICAgICAgICAgICAgICAgICAgICAgICAgICBlbmRQb3J0OgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IEVuZFBvcnQgZGVmaW5lcyB0aGUgZW5kIG9mIHRoZSBwb3J0IHJhbmdlLCBiZWluZyB0aGUgZW5kIGluY2x1ZGVkIHdpdGhpbiB0aGUgcmFuZ2UuIEl0IGNhbiBvbmx5IGJlIHNwZWNpZmllZCB3aGVuIGEgbnVtZXJpY2FsIGBwb3J0YCBpcyBzcGVjaWZpZWQuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3JtYXQ6IGludDMyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBpbnRlZ2VyCiAgICAgICAgICAgICAgICAgICAgICAgICAgcG9ydDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFueU9mOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgLSB0eXBlOiBpbnRlZ2VyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAtIHR5cGU6IHN0cmluZwogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IFRoZSBwb3J0IG9uIHRoZSBnaXZlbiBwcm90b2NvbC4gVGhpcyBjYW4gYmUgZWl0aGVyIGEgbnVtZXJpY2FsIG9yIG5hbWVkIHBvcnQgb24gYSBQb2QuIElmIHRoaXMgZmllbGQgaXMgbm90IHByb3ZpZGVkLCB0aGlzIG1hdGNoZXMgYWxsIHBvcnQgbmFtZXMgYW5kIG51bWJlcnMuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZzogdHJ1ZQogICAgICAgICAgICAgICAgICAgICAgICAgIHByb3RvY29sOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdDogVENQCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogVGhlIHByb3RvY29sIChUQ1AsIFVEUCwgb3IgU0NUUCkgd2hpY2ggdHJhZmZpYyBtdXN0IG1hdGNoLiBJZiBub3Qgc3BlY2lmaWVkLCB0aGlzIGZpZWxkIGRlZmF1bHRzIHRvIFRDUC4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBvYmplY3QKICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IGFycmF5CiAgICAgICAgICAgICAgICAgICAgdG86CiAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogUnVsZSBpcyBtYXRjaGVkIGlmIHRyYWZmaWMgaXMgaW50ZW5kZWQgZm9yIHdvcmtsb2FkcyBzZWxlY3RlZCBieSB0aGlzIGZpZWxkLiBJZiB0aGlzIGZpZWxkIGlzIGVtcHR5IG9yIG1pc3NpbmcsIHRoaXMgcnVsZSBtYXRjaGVzIGFsbCBkZXN0aW5hdGlvbnMuCiAgICAgICAgICAgICAgICAgICAgICBpdGVtczoKICAgICAgICAgICAgICAgICAgICAgICAgcHJvcGVydGllczoKICAgICAgICAgICAgICAgICAgICAgICAgICBpcEJsb2NrOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IElQQmxvY2sgZGVzY3JpYmVzIHRoZSBJUEFkZHJlc3Nlcy9JUEJsb2NrcyB0aGF0IGlzIG1hdGNoZWQgaW4gdG8vZnJvbS4gSVBCbG9jayBjYW5ub3QgYmUgc2V0IGFzIHBhcnQgb2YgdGhlIEFwcGxpZWRUbyBmaWVsZC4gQ2Fubm90IGJlIHNldCB3aXRoIGFueSBvdGhlciBzZWxlY3Rvci4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb3BlcnRpZXM6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNpZHI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IENJRFIgaXMgYSBzdHJpbmcgcmVwcmVzZW50aW5nIHRoZSBJUCBCbG9jayBWYWxpZCBleGFtcGxlcyBhcmUgIjE5Mi4xNjguMS4xLzI0IiBvciAiMjAwMTpkYjk6Oi82NCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhjZXB0OgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBFeGNlcHQgaXMgYSBzbGljZSBvZiBDSURScyB0aGF0IHNob3VsZCBub3QgYmUgaW5jbHVkZWQgd2l0aGluIGFuIElQIEJsb2NrIFZhbGlkIGV4YW1wbGVzIGFyZSAiMTkyLjE2OC4xLjEvMjQiIG9yICIyMDAxOmRiOTo6LzY0IiBFeGNlcHQgdmFsdWVzIHdpbGwgYmUgcmVqZWN0ZWQgaWYgdGhleSBhcmUgb3V0c2lkZSB0aGUgQ0lEUiByYW5nZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW1zOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogYXJyYXkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgLSBjaWRyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBvYmplY3QKICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lc3BhY2VTZWxlY3RvcjoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBTZWxlY3QgYWxsIFBvZHMgZnJvbSBOYW1lc3BhY2VzIG1hdGNoZWQgYnkgdGhpcyBzZWxlY3RvciwgYXMgd29ya2xvYWRzIGluIFRvL0Zyb20gZmllbGRzLiBJZiBzZXQgd2l0aCBQb2RTZWxlY3RvciwgUG9kcyBhcmUgbWF0Y2hlZCBmcm9tIE5hbWVzcGFjZXMgbWF0Y2hlZCBieSB0aGUgTmFtZXNwYWNlU2VsZWN0b3IuIENhbm5vdCBiZSBzZXQgd2l0aCBhbnkgb3RoZXIgc2VsZWN0b3IgZXhjZXB0IFBvZFNlbGVjdG9yIG9yIEV4dGVybmFsRW50aXR5U2VsZWN0b3IuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9wZXJ0aWVzOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXRjaEV4cHJlc3Npb25zOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW1zOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvcGVydGllczoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5OgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcGVyYXRvcjoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogb3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuIFZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMgYW5kIERvZXNOb3RFeGlzdC4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWVzOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiB2YWx1ZXMgaXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLCB0aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCwgdGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBUaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpYyBtZXJnZSBwYXRjaC4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtczoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IGFycmF5CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC0ga2V5CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAtIG9wZXJhdG9yCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBvYmplY3QKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBhcnJheQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXRjaExhYmVsczoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZGRpdGlvbmFsUHJvcGVydGllczoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IG9iamVjdAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogb2JqZWN0CiAgICAgICAgICAgICAgICAgICAgICAgICAgcG9kU2VsZWN0b3I6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogU2VsZWN0IFBvZHMgZnJvbSBOZXR3b3JrUG9saWN5J3MgTmFtZXNwYWNlIGFzIHdvcmtsb2FkcyBpbiBBcHBsaWVkVG8vVG8vRnJvbSBmaWVsZHMuIElmIHNldCB3aXRoIE5hbWVzcGFjZVNlbGVjdG9yLCBQb2RzIGFyZSBtYXRjaGVkIGZyb20gTmFtZXNwYWNlcyBtYXRjaGVkIGJ5IHRoZSBOYW1lc3BhY2VTZWxlY3Rvci4gQ2Fubm90IGJlIHNldCB3aXRoIGFueSBvdGhlciBzZWxlY3RvciBleGNlcHQgTmFtZXNwYWNlU2VsZWN0b3IuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9wZXJ0aWVzOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXRjaEV4cHJlc3Npb25zOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW1zOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvcGVydGllczoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5OgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcGVyYXRvcjoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogb3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuIFZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMgYW5kIERvZXNOb3RFeGlzdC4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWVzOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiB2YWx1ZXMgaXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLCB0aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCwgdGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBUaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpYyBtZXJnZSBwYXRjaC4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtczoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IGFycmF5CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXF1aXJlZDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC0ga2V5CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAtIG9wZXJhdG9yCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBvYmplY3QKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBhcnJheQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXRjaExhYmVsczoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhZGRpdGlvbmFsUHJvcGVydGllczoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IG9iamVjdAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogb2JqZWN0CiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IG9iamVjdAogICAgICAgICAgICAgICAgICAgICAgdHlwZTogYXJyYXkKICAgICAgICAgICAgICAgICAgICB0b0ZxRG46CiAgICAgICAgICAgICAgICAgICAgICBwcm9wZXJ0aWVzOgogICAgICAgICAgICAgICAgICAgICAgICBtYXRjaE5hbWVzOgogICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW1zOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogYXJyYXkKICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOgogICAgICAgICAgICAgICAgICAgICAgLSBtYXRjaE5hbWVzCiAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBvYmplY3QKICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6CiAgICAgICAgICAgICAgICAgIC0gZW5hYmxlTG9nZ2luZwogICAgICAgICAgICAgICAgICAtIHRvRnFEbgogICAgICAgICAgICAgICAgICB0eXBlOiBvYmplY3QKICAgICAgICAgICAgICAgIHR5cGU6IGFycmF5CiAgICAgICAgICAgICAgaW5ncmVzczoKICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBTZXQgb2YgaW5ncmVzcyBydWxlcyBldmFsdWF0ZWQgYmFzZWQgb24gdGhlIG9yZGVyIGluIHdoaWNoIHRoZXkgYXJlIHNldC4KICAgICAgICAgICAgICAgIGl0ZW1zOgogICAgICAgICAgICAgICAgICBwcm9wZXJ0aWVzOgogICAgICAgICAgICAgICAgICAgIGFjdGlvbjoKICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBBY3Rpb24gc3BlY2lmaWVzIHRoZSBhY3Rpb24gdG8gYmUgYXBwbGllZCBvbiB0aGUgcnVsZS4KICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAgICAgICAgICAgIGVuYWJsZUxvZ2dpbmc6CiAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogRW5hYmxlTG9nZ2luZyBpcyB1c2VkIHRvIGluZGljYXRlIGlmIGFnZW50IHNob3VsZCBnZW5lcmF0ZSBsb2dzIHdoZW4gcnVsZXMgYXJlIG1hdGNoZWQuIFNob3VsZCBiZSBkZWZhdWx0IHRvIGZhbHNlLgogICAgICAgICAgICAgICAgICAgICAgdHlwZTogYm9vbGVhbgogICAgICAgICAgICAgICAgICAgIGZyb206CiAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogUnVsZSBpcyBtYXRjaGVkIGlmIHRyYWZmaWMgb3JpZ2luYXRlcyBmcm9tIHdvcmtsb2FkcyBzZWxlY3RlZCBieSB0aGlzIGZpZWxkLiBJZiB0aGlzIGZpZWxkIGlzIGVtcHR5LCB0aGlzIHJ1bGUgbWF0Y2hlcyBhbGwgc291cmNlcy4KICAgICAgICAgICAgICAgICAgICAgIGl0ZW1zOgogICAgICAgICAgICAgICAgICAgICAgICBwcm9wZXJ0aWVzOgogICAgICAgICAgICAgICAgICAgICAgICAgIGlwQmxvY2s6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogSVBCbG9jayBkZXNjcmliZXMgdGhlIElQQWRkcmVzc2VzL0lQQmxvY2tzIHRoYXQgaXMgbWF0Y2hlZCBpbiB0by9mcm9tLiBJUEJsb2NrIGNhbm5vdCBiZSBzZXQgYXMgcGFydCBvZiB0aGUgQXBwbGllZFRvIGZpZWxkLiBDYW5ub3QgYmUgc2V0IHdpdGggYW55IG90aGVyIHNlbGVjdG9yLgogICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvcGVydGllczoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2lkcjoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogQ0lEUiBpcyBhIHN0cmluZyByZXByZXNlbnRpbmcgdGhlIElQIEJsb2NrIFZhbGlkIGV4YW1wbGVzIGFyZSAiMTkyLjE2OC4xLjEvMjQiIG9yICIyMDAxOmRiOTo6LzY0IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleGNlcHQ6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IEV4Y2VwdCBpcyBhIHNsaWNlIG9mIENJRFJzIHRoYXQgc2hvdWxkIG5vdCBiZSBpbmNsdWRlZCB3aXRoaW4gYW4gSVAgQmxvY2sgVmFsaWQgZXhhbXBsZXMgYXJlICIxOTIuMTY4LjEuMS8yNCIgb3IgIjIwMDE6ZGI5OjovNjQiIEV4Y2VwdCB2YWx1ZXMgd2lsbCBiZSByZWplY3RlZCBpZiB0aGV5IGFyZSBvdXRzaWRlIHRoZSBDSURSIHJhbmdlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbXM6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBhcnJheQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAtIGNpZHIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IG9iamVjdAogICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWVzcGFjZVNlbGVjdG9yOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvcGVydGllczoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWF0Y2hFeHByZXNzaW9uczoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtczoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb3BlcnRpZXM6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3BlcmF0b3I6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IG9wZXJhdG9yIHJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLiBWYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzIGFuZCBEb2VzTm90RXhpc3QuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlczoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogdmFsdWVzIGlzIGFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbiwgdGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsIHRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWMgbWVyZ2UgcGF0Y2guCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbXM6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBhcnJheQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAtIGtleQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLSBvcGVyYXRvcgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogb2JqZWN0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogYXJyYXkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWF0Y2hMYWJlbHM6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRkaXRpb25hbFByb3BlcnRpZXM6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBvYmplY3QKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IG9iamVjdAogICAgICAgICAgICAgICAgICAgICAgICAgIHBvZFNlbGVjdG9yOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IFNlbGVjdCBQb2RzIGZyb20gTmV0d29ya1BvbGljeSdzIE5hbWVzcGFjZSBhcyB3b3JrbG9hZHMgaW4gQXBwbGllZFRvL1RvL0Zyb20gZmllbGRzLiBJZiBzZXQgd2l0aCBOYW1lc3BhY2VTZWxlY3RvciwgUG9kcyBhcmUgbWF0Y2hlZCBmcm9tIE5hbWVzcGFjZXMgbWF0Y2hlZCBieSB0aGUgTmFtZXNwYWNlU2VsZWN0b3IuIENhbm5vdCBiZSBzZXQgd2l0aCBhbnkgb3RoZXIgc2VsZWN0b3IgZXhjZXB0IE5hbWVzcGFjZVNlbGVjdG9yLgogICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvcGVydGllczoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWF0Y2hFeHByZXNzaW9uczoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogbWF0Y2hFeHByZXNzaW9ucyBpcyBhIGxpc3Qgb2YgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnRzLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtczoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb3BlcnRpZXM6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3BlcmF0b3I6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IG9wZXJhdG9yIHJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLiBWYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzIGFuZCBEb2VzTm90RXhpc3QuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlczoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogdmFsdWVzIGlzIGFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbiwgdGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsIHRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWMgbWVyZ2UgcGF0Y2guCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbXM6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBhcnJheQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAtIGtleQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLSBvcGVyYXRvcgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogb2JqZWN0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogYXJyYXkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWF0Y2hMYWJlbHM6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWRkaXRpb25hbFByb3BlcnRpZXM6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBvYmplY3QKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IG9iamVjdAogICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBvYmplY3QKICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IGFycmF5CiAgICAgICAgICAgICAgICAgICAgcG9ydHM6CiAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogU2V0IG9mIHBvcnQgYW5kIHByb3RvY29sIGFsbG93ZWQvZGVuaWVkIGJ5IHRoZSBydWxlLiBJZiB0aGlzIGZpZWxkIGlzIHVuc2V0IG9yIGVtcHR5LCB0aGlzIHJ1bGUgbWF0Y2hlcyBhbGwgcG9ydHMuCiAgICAgICAgICAgICAgICAgICAgICBpdGVtczoKICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IE5ldHdvcmtQb2xpY3lQb3J0IGRlc2NyaWJlcyB0aGUgcG9ydCBhbmQgcHJvdG9jb2wgdG8gbWF0Y2ggaW4gYSBydWxlLgogICAgICAgICAgICAgICAgICAgICAgICBwcm9wZXJ0aWVzOgogICAgICAgICAgICAgICAgICAgICAgICAgIGVuZFBvcnQ6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogRW5kUG9ydCBkZWZpbmVzIHRoZSBlbmQgb2YgdGhlIHBvcnQgcmFuZ2UsIGJlaW5nIHRoZSBlbmQgaW5jbHVkZWQgd2l0aGluIHRoZSByYW5nZS4gSXQgY2FuIG9ubHkgYmUgc3BlY2lmaWVkIHdoZW4gYSBudW1lcmljYWwgYHBvcnRgIGlzIHNwZWNpZmllZC4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcm1hdDogaW50MzIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IGludGVnZXIKICAgICAgICAgICAgICAgICAgICAgICAgICBwb3J0OgogICAgICAgICAgICAgICAgICAgICAgICAgICAgYW55T2Y6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAtIHR5cGU6IGludGVnZXIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC0gdHlwZTogc3RyaW5nCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogVGhlIHBvcnQgb24gdGhlIGdpdmVuIHByb3RvY29sLiBUaGlzIGNhbiBiZSBlaXRoZXIgYSBudW1lcmljYWwgb3IgbmFtZWQgcG9ydCBvbiBhIFBvZC4gSWYgdGhpcyBmaWVsZCBpcyBub3QgcHJvdmlkZWQsIHRoaXMgbWF0Y2hlcyBhbGwgcG9ydCBuYW1lcyBhbmQgbnVtYmVycy4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHgta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nOiB0cnVlCiAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvdG9jb2w6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWZhdWx0OiBUQ1AKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBUaGUgcHJvdG9jb2wgKFRDUCwgVURQLCBvciBTQ1RQKSB3aGljaCB0cmFmZmljIG11c3QgbWF0Y2guIElmIG5vdCBzcGVjaWZpZWQsIHRoaXMgZmllbGQgZGVmYXVsdHMgdG8gVENQLgogICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IG9iamVjdAogICAgICAgICAgICAgICAgICAgICAgdHlwZTogYXJyYXkKICAgICAgICAgICAgICAgICAgdHlwZTogb2JqZWN0CiAgICAgICAgICAgICAgICB0eXBlOiBhcnJheQogICAgICAgICAgICAgIHBvbGljeVR5cGVzOgogICAgICAgICAgICAgICAgaXRlbXM6CiAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBQb2xpY3kgVHlwZSBzdHJpbmcgZGVzY3JpYmVzIHRoZSBOZXR3b3JrUG9saWN5IHR5cGUgVGhpcyB0eXBlIGlzIGJldGEtbGV2ZWwgaW4gMS44CiAgICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAgICAgICAgdHlwZTogYXJyYXkKICAgICAgICAgICAgICBwcmlvcml0eToKICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBQcmlvcml0eSBzcGVjZmllcyB0aGUgb3JkZXIgb2YgdGhlIE5ldHdvcmtQb2xpY3kgcmVsYXRpdmUgdG8gb3RoZXIgTmV0d29ya1BvbGljaWVzLgogICAgICAgICAgICAgICAgdHlwZTogaW50ZWdlcgogICAgICAgICAgICAgIHR5cGU6CiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogdHlwZSBvZiB0aGUgcG9saWN5LgogICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgICAgIHJlcXVpcmVkOgogICAgICAgICAgICAtIHR5cGUKICAgICAgICAgICAgdHlwZTogb2JqZWN0CiAgICAgICAgcmVxdWlyZWQ6CiAgICAgICAgLSBzcGVjCiAgICAgICAgdHlwZTogb2JqZWN0CiAgICBzZXJ2ZWQ6IHRydWUKICAgIHN0b3JhZ2U6IHRydWUKc3RhdHVzOgogIGFjY2VwdGVkTmFtZXM6CiAgICBraW5kOiAiIgogICAgcGx1cmFsOiAiIgogIGNvbmRpdGlvbnM6IFtdCiAgc3RvcmVkVmVyc2lvbnM6IFtdCi0tLQphcGlWZXJzaW9uOiBhcGlleHRlbnNpb25zLms4cy5pby92MQpraW5kOiBDdXN0b21SZXNvdXJjZURlZmluaXRpb24KbWV0YWRhdGE6CiAgbmFtZTogZG5zbmV0d29ya3BvbGljaWVzLmFjaS5kbnNuZXRwb2wKc3BlYzoKICBncm91cDogYWNpLmRuc25ldHBvbAogIG5hbWVzOgogICAga2luZDogRG5zTmV0d29ya1BvbGljeQogICAgbGlzdEtpbmQ6IERuc05ldHdvcmtQb2xpY3lMaXN0CiAgICBwbHVyYWw6IGRuc25ldHdvcmtwb2xpY2llcwogICAgc2luZ3VsYXI6IGRuc25ldHdvcmtwb2xpY3kKICBzY29wZTogTmFtZXNwYWNlZAogIHZlcnNpb25zOgogIC0gbmFtZTogdjFiZXRhCiAgICBzY2hlbWE6CiAgICAgIG9wZW5BUElWM1NjaGVtYToKICAgICAgICBkZXNjcmlwdGlvbjogZG5zIG5ldHdvcmsgUG9saWN5CiAgICAgICAgcHJvcGVydGllczoKICAgICAgICAgIGFwaVZlcnNpb246CiAgICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAga2luZDoKICAgICAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgICBtZXRhZGF0YToKICAgICAgICAgICAgdHlwZTogb2JqZWN0CiAgICAgICAgICBzcGVjOgogICAgICAgICAgICBwcm9wZXJ0aWVzOgogICAgICAgICAgICAgIGFwcGxpZWRUbzoKICAgICAgICAgICAgICAgIHByb3BlcnRpZXM6CiAgICAgICAgICAgICAgICAgIG5hbWVzcGFjZVNlbGVjdG9yOgogICAgICAgICAgICAgICAgICAgIHByb3BlcnRpZXM6CiAgICAgICAgICAgICAgICAgICAgICBtYXRjaEV4cHJlc3Npb25zOgogICAgICAgICAgICAgICAgICAgICAgICBpdGVtczoKICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9wZXJ0aWVzOgogICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5OgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wZXJhdG9yOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlczoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbXM6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IGFycmF5CiAgICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6CiAgICAgICAgICAgICAgICAgICAgICAgICAgLSBrZXkKICAgICAgICAgICAgICAgICAgICAgICAgICAtIG9wZXJhdG9yCiAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogb2JqZWN0CiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IGFycmF5CiAgICAgICAgICAgICAgICAgICAgICBtYXRjaExhYmVsczoKICAgICAgICAgICAgICAgICAgICAgICAgYWRkaXRpb25hbFByb3BlcnRpZXM6CiAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IG9iamVjdAogICAgICAgICAgICAgICAgICAgIHR5cGU6IG9iamVjdAogICAgICAgICAgICAgICAgICBwb2RTZWxlY3RvcjoKICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogYWxsb3cgaW5ncmVzcyBmcm9tIHRoZSBzYW1lIG5hbWVzcGFjZQogICAgICAgICAgICAgICAgICAgIHByb3BlcnRpZXM6CiAgICAgICAgICAgICAgICAgICAgICBtYXRjaEV4cHJlc3Npb25zOgogICAgICAgICAgICAgICAgICAgICAgICBpdGVtczoKICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9wZXJ0aWVzOgogICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5OgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wZXJhdG9yOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogb3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuIFZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMgYW5kIERvZXNOb3RFeGlzdC4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZXM6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiB2YWx1ZXMgaXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLCB0aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCwgdGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBUaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpYyBtZXJnZSBwYXRjaC4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbXM6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IGFycmF5CiAgICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6CiAgICAgICAgICAgICAgICAgICAgICAgICAgLSBrZXkKICAgICAgICAgICAgICAgICAgICAgICAgICAtIG9wZXJhdG9yCiAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogb2JqZWN0CiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IGFycmF5CiAgICAgICAgICAgICAgICAgICAgICBtYXRjaExhYmVsczoKICAgICAgICAgICAgICAgICAgICAgICAgYWRkaXRpb25hbFByb3BlcnRpZXM6CiAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IG9iamVjdAogICAgICAgICAgICAgICAgICAgIHR5cGU6IG9iamVjdAogICAgICAgICAgICAgICAgdHlwZTogb2JqZWN0CiAgICAgICAgICAgICAgZWdyZXNzOgogICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IFNldCBvZiBlZ3Jlc3MgcnVsZXMgZXZhbHVhdGVkIGJhc2VkIG9uIHRoZSBvcmRlciBpbiB3aGljaCB0aGV5IGFyZSBzZXQuCiAgICAgICAgICAgICAgICBwcm9wZXJ0aWVzOgogICAgICAgICAgICAgICAgICB0b0ZxZG46CiAgICAgICAgICAgICAgICAgICAgcHJvcGVydGllczoKICAgICAgICAgICAgICAgICAgICAgIG1hdGNoTmFtZXM6CiAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW1zOgogICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBhcnJheQogICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOgogICAgICAgICAgICAgICAgICAgIC0gbWF0Y2hOYW1lcwogICAgICAgICAgICAgICAgICAgIHR5cGU6IG9iamVjdAogICAgICAgICAgICAgICAgcmVxdWlyZWQ6CiAgICAgICAgICAgICAgICAtIHRvRnFkbgogICAgICAgICAgICAgICAgdHlwZTogb2JqZWN0CiAgICAgICAgICAgIHR5cGU6IG9iamVjdAogICAgICAgIHJlcXVpcmVkOgogICAgICAgIC0gc3BlYwogICAgICAgIHR5cGU6IG9iamVjdAogICAgc2VydmVkOiB0cnVlCiAgICBzdG9yYWdlOiB0cnVlCnN0YXR1czoKICBhY2NlcHRlZE5hbWVzOgogICAga2luZDogIiIKICAgIHBsdXJhbDogIiIKICBjb25kaXRpb25zOiBbXQogIHN0b3JlZFZlcnNpb25zOiBbXQotLS0KYXBpVmVyc2lvbjogYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEKa2luZDogQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uCm1ldGFkYXRhOgogIG5hbWU6IHFvc3BvbGljaWVzLmFjaS5xb3MKc3BlYzoKICBncm91cDogYWNpLnFvcwogIG5hbWVzOgogICAga2luZDogUW9zUG9saWN5CiAgICBsaXN0S2luZDogUW9zUG9saWN5TGlzdAogICAgcGx1cmFsOiBxb3Nwb2xpY2llcwogICAgc2luZ3VsYXI6IHFvc3BvbGljeQogIHNjb3BlOiBOYW1lc3BhY2VkCiAgcHJlc2VydmVVbmtub3duRmllbGRzOiBmYWxzZQogIHZlcnNpb25zOgogIC0gbmFtZTogdjEKICAgIHNlcnZlZDogdHJ1ZQogICAgc3RvcmFnZTogdHJ1ZQogICAgc3VicmVzb3VyY2VzOgogICAgICBzdGF0dXM6IHt9CiAgICBzY2hlbWE6CiAgICAgIG9wZW5BUElWM1NjaGVtYToKICAgICAgICB0eXBlOiBvYmplY3QKICAgICAgICBwcm9wZXJ0aWVzOgogICAgICAgICAgYXBpVmVyc2lvbjoKICAgICAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgICBraW5kOgogICAgICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICAgIHNwZWM6CiAgICAgICAgICAgIHR5cGU6IG9iamVjdAogICAgICAgICAgICBwcm9wZXJ0aWVzOgogICAgICAgICAgICAgIHBvZFNlbGVjdG9yOgogICAgICAgICAgICAgICAgZGVzY3JpcHRpb246ICdTZWxlY3Rpb24gb2YgUG9kcycKICAgICAgICAgICAgICAgIHR5cGU6IG9iamVjdAogICAgICAgICAgICAgICAgcHJvcGVydGllczoKICAgICAgICAgICAgICAgICAgbWF0Y2hMYWJlbHM6CiAgICAgICAgICAgICAgICAgICAgdHlwZTogb2JqZWN0CiAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246CiAgICAgICAgICAgICAgaW5ncmVzczoKICAgICAgICAgICAgICAgIHR5cGU6IG9iamVjdAogICAgICAgICAgICAgICAgcHJvcGVydGllczoKICAgICAgICAgICAgICAgICAgcG9saWNpbmdfcmF0ZToKICAgICAgICAgICAgICAgICAgICB0eXBlOiBpbnRlZ2VyCiAgICAgICAgICAgICAgICAgICAgbWluaW11bTogMAogICAgICAgICAgICAgICAgICBwb2xpY2luZ19idXJzdDoKICAgICAgICAgICAgICAgICAgICB0eXBlOiBpbnRlZ2VyCiAgICAgICAgICAgICAgICAgICAgbWluaW11bTogMAogICAgICAgICAgICAgIGVncmVzczoKICAgICAgICAgICAgICAgIHR5cGU6IG9iamVjdAogICAgICAgICAgICAgICAgcHJvcGVydGllczoKICAgICAgICAgICAgICAgICAgcG9saWNpbmdfcmF0ZToKICAgICAgICAgICAgICAgICAgICB0eXBlOiBpbnRlZ2VyCiAgICAgICAgICAgICAgICAgICAgbWluaW11bTogMAogICAgICAgICAgICAgICAgICBwb2xpY2luZ19idXJzdDoKICAgICAgICAgICAgICAgICAgICB0eXBlOiBpbnRlZ2VyCiAgICAgICAgICAgICAgICAgICAgbWluaW11bTogMAogICAgICAgICAgICAgIGRzY3BtYXJrOgogICAgICAgICAgICAgICAgdHlwZTogaW50ZWdlcgogICAgICAgICAgICAgICAgZGVmYXVsdDogMAogICAgICAgICAgICAgICAgbWluaW11bTogMAogICAgICAgICAgICAgICAgbWF4aW11bTogNjMKLS0tCmFwaVZlcnNpb246IGFwaWV4dGVuc2lvbnMuazhzLmlvL3YxCmtpbmQ6IEN1c3RvbVJlc291cmNlRGVmaW5pdGlvbgptZXRhZGF0YToKICBuYW1lOiBuZXRmbG93cG9saWNpZXMuYWNpLm5ldGZsb3cKc3BlYzoKICBncm91cDogYWNpLm5ldGZsb3cKICBuYW1lczoKICAgIGtpbmQ6IE5ldGZsb3dQb2xpY3kKICAgIGxpc3RLaW5kOiBOZXRmbG93UG9saWN5TGlzdAogICAgcGx1cmFsOiBuZXRmbG93cG9saWNpZXMKICAgIHNpbmd1bGFyOiBuZXRmbG93cG9saWN5CiAgc2NvcGU6IENsdXN0ZXIKICBwcmVzZXJ2ZVVua25vd25GaWVsZHM6IGZhbHNlCiAgdmVyc2lvbnM6CiAgLSBuYW1lOiB2MWFscGhhCiAgICBzZXJ2ZWQ6IHRydWUKICAgIHN0b3JhZ2U6IHRydWUKICAgIHNjaGVtYToKICAgIyBvcGVuQVBJVjNTY2hlbWEgaXMgdGhlIHNjaGVtYSBmb3IgdmFsaWRhdGluZyBjdXN0b20gb2JqZWN0cy4KICAgICAgb3BlbkFQSVYzU2NoZW1hOgogICAgICAgIHR5cGU6IG9iamVjdAogICAgICAgIHByb3BlcnRpZXM6CiAgICAgICAgICBhcGlWZXJzaW9uOgogICAgICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICAgIGtpbmQ6CiAgICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAgc3BlYzoKICAgICAgICAgICAgdHlwZTogb2JqZWN0CiAgICAgICAgICAgIHByb3BlcnRpZXM6CiAgICAgICAgICAgICAgZmxvd1NhbXBsaW5nUG9saWN5OgogICAgICAgICAgICAgICAgdHlwZTogb2JqZWN0CiAgICAgICAgICAgICAgICBwcm9wZXJ0aWVzOgogICAgICAgICAgICAgICAgICBkZXN0SXA6CiAgICAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgICAgICAgICAgIGRlc3RQb3J0OgogICAgICAgICAgICAgICAgICAgIHR5cGU6IGludGVnZXIKICAgICAgICAgICAgICAgICAgICBtaW5pbXVtOiAwCiAgICAgICAgICAgICAgICAgICAgbWF4aW11bTogNjU1MzUKICAgICAgICAgICAgICAgICAgICBkZWZhdWx0OiAyMDU1CiAgICAgICAgICAgICAgICAgIGZsb3dUeXBlOgogICAgICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAgICAgICAgICAgIGVudW06CiAgICAgICAgICAgICAgICAgICAgICAtIG5ldGZsb3cKICAgICAgICAgICAgICAgICAgICAgIC0gaXBmaXgKICAgICAgICAgICAgICAgICAgICBkZWZhdWx0OiBuZXRmbG93CiAgICAgICAgICAgICAgICAgIGFjdGl2ZUZsb3dUaW1lT3V0OgogICAgICAgICAgICAgICAgICAgIHR5cGU6IGludGVnZXIKICAgICAgICAgICAgICAgICAgICBtaW5pbXVtOiAwCiAgICAgICAgICAgICAgICAgICAgbWF4aW11bTogMzYwMAogICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6IDYwCiAgICAgICAgICAgICAgICAgIGlkbGVGbG93VGltZU91dDoKICAgICAgICAgICAgICAgICAgICB0eXBlOiBpbnRlZ2VyCiAgICAgICAgICAgICAgICAgICAgbWluaW11bTogMAogICAgICAgICAgICAgICAgICAgIG1heGltdW06IDYwMAogICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6IDE1CiAgICAgICAgICAgICAgICAgIHNhbXBsaW5nUmF0ZToKICAgICAgICAgICAgICAgICAgICB0eXBlOiBpbnRlZ2VyCiAgICAgICAgICAgICAgICAgICAgbWluaW11bTogMAogICAgICAgICAgICAgICAgICAgIG1heGltdW06IDEwMDAKICAgICAgICAgICAgICAgICAgICBkZWZhdWx0OiAwCiAgICAgICAgICAgICAgICByZXF1aXJlZDoKICAgICAgICAgICAgICAgIC0gZGVzdElwCiAgICAgICAgICAgICAgICB0eXBlOiBvYmplY3QKLS0tCmFwaVZlcnNpb246IGFwaWV4dGVuc2lvbnMuazhzLmlvL3YxCmtpbmQ6IEN1c3RvbVJlc291cmNlRGVmaW5pdGlvbgptZXRhZGF0YToKICBuYW1lOiBlcnNwYW5wb2xpY2llcy5hY2kuZXJzcGFuCnNwZWM6CiAgZ3JvdXA6IGFjaS5lcnNwYW4KICBuYW1lczoKICAgIGtpbmQ6IEVyc3BhblBvbGljeQogICAgbGlzdEtpbmQ6IEVyc3BhblBvbGljeUxpc3QKICAgIHBsdXJhbDogZXJzcGFucG9saWNpZXMKICAgIHNpbmd1bGFyOiBlcnNwYW5wb2xpY3kKICBzY29wZTogQ2x1c3RlcgogIHByZXNlcnZlVW5rbm93bkZpZWxkczogZmFsc2UKICB2ZXJzaW9uczoKICAtIG5hbWU6IHYxYWxwaGEKICAgIHNlcnZlZDogdHJ1ZQogICAgc3RvcmFnZTogdHJ1ZQogICAgc2NoZW1hOgogICAgICBvcGVuQVBJVjNTY2hlbWE6CiAgICAgICAgdHlwZTogb2JqZWN0CiAgICAgICAgcHJvcGVydGllczoKICAgICAgICAgIGFwaVZlcnNpb246CiAgICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAga2luZDoKICAgICAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgICBzcGVjOgogICAgICAgICAgICB0eXBlOiBvYmplY3QKICAgICAgICAgICAgcHJvcGVydGllczoKICAgICAgICAgICAgICBzZWxlY3RvcjoKICAgICAgICAgICAgICAgIHR5cGU6IG9iamVjdAogICAgICAgICAgICAgICAgZGVzY3JpcHRpb246ICdTZWxlY3Rpb24gb2YgUG9kcycKICAgICAgICAgICAgICAgIHByb3BlcnRpZXM6CiAgICAgICAgICAgICAgICAgIGxhYmVsczoKICAgICAgICAgICAgICAgICAgICB0eXBlOiBvYmplY3QKICAgICAgICAgICAgICAgICAgICBwcm9wZXJ0aWVzOgogICAgICAgICAgICAgICAgICAgIGFkZGl0aW9uYWxQcm9wZXJ0aWVzOgogICAgICAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgICAgICAgICAgIG5hbWVzcGFjZToKICAgICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICAgICAgICBzb3VyY2U6CiAgICAgICAgICAgICAgICB0eXBlOiBvYmplY3QKICAgICAgICAgICAgICAgIHByb3BlcnRpZXM6CiAgICAgICAgICAgICAgICAgIGFkbWluU3RhdGU6CiAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IEFkbWluaXN0cmF0aXZlIHN0YXRlLgogICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6IHN0YXJ0CiAgICAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgICAgICAgICAgICAgZW51bToKICAgICAgICAgICAgICAgICAgICAgIC0gc3RhcnQKICAgICAgICAgICAgICAgICAgICAgIC0gc3RvcAogICAgICAgICAgICAgICAgICBkaXJlY3Rpb246CiAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IERpcmVjdGlvbiBvZiB0aGUgcGFja2V0cyB0byBtb25pdG9yLgogICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6IGJvdGgKICAgICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICAgICAgICAgICAgICBlbnVtOgogICAgICAgICAgICAgICAgICAgICAgLSBpbgogICAgICAgICAgICAgICAgICAgICAgLSBvdXQKICAgICAgICAgICAgICAgICAgICAgIC0gYm90aAogICAgICAgICAgICAgIGRlc3RpbmF0aW9uOgogICAgICAgICAgICAgICAgdHlwZTogb2JqZWN0CiAgICAgICAgICAgICAgICBwcm9wZXJ0aWVzOgogICAgICAgICAgICAgICAgICBkZXN0SVA6CiAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IERlc3RpbmF0aW9uIElQIG9mIHRoZSBFUlNQQU4gcGFja2V0LgogICAgICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAgICAgICAgICBmbG93SUQ6CiAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IFVuaXF1ZSBmbG93IElEIG9mIHRoZSBFUlNQQU4gcGFja2V0LgogICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6IDEKICAgICAgICAgICAgICAgICAgICB0eXBlOiBpbnRlZ2VyCiAgICAgICAgICAgICAgICAgICAgbWluaW11bTogMQogICAgICAgICAgICAgICAgICAgIG1heGltdW06IDEwMjMKICAgICAgICAgICAgICAgIHJlcXVpcmVkOgogICAgICAgICAgICAgICAgLSBkZXN0SVAKICAgICAgICAgICAgICAgIHR5cGU6IG9iamVjdAotLS0KYXBpVmVyc2lvbjogYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEKa2luZDogQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uCm1ldGFkYXRhOgogIG5hbWU6IGVuYWJsZWRyb3Bsb2dzLmFjaS5kcm9wbG9nCnNwZWM6CiAgZ3JvdXA6IGFjaS5kcm9wbG9nCiAgbmFtZXM6CiAgICBraW5kOiBFbmFibGVEcm9wTG9nCiAgICBsaXN0S2luZDogRW5hYmxlRHJvcExvZ0xpc3QKICAgIHBsdXJhbDogZW5hYmxlZHJvcGxvZ3MKICAgIHNpbmd1bGFyOiBlbmFibGVkcm9wbG9nCiAgc2NvcGU6IENsdXN0ZXIKICB2ZXJzaW9uczoKICAtIG5hbWU6IHYxYWxwaGExCiAgICBzZXJ2ZWQ6IHRydWUKICAgIHN0b3JhZ2U6IHRydWUKICAgIHNjaGVtYToKICAgIyBvcGVuQVBJVjNTY2hlbWEgaXMgdGhlIHNjaGVtYSBmb3IgdmFsaWRhdGluZyBjdXN0b20gb2JqZWN0cy4KICAgICAgb3BlbkFQSVYzU2NoZW1hOgogICAgICAgIHR5cGU6IG9iamVjdAogICAgICAgIHByb3BlcnRpZXM6CiAgICAgICAgICBhcGlWZXJzaW9uOgogICAgICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICAgIGtpbmQ6CiAgICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAgc3BlYzoKICAgICAgICAgICAgZGVzY3JpcHRpb246IERlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgRW5hYmxlRHJvcExvZwogICAgICAgICAgICB0eXBlOiBvYmplY3QKICAgICAgICAgICAgcHJvcGVydGllczoKICAgICAgICAgICAgICBkaXNhYmxlRGVmYXVsdERyb3BMb2c6CiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogRGlzYWJsZXMgdGhlIGRlZmF1bHQgZHJvcGxvZyBlbmFibGVkIGJ5IGFjYy1wcm92aXNpb24uCiAgICAgICAgICAgICAgICBkZWZhdWx0OiBmYWxzZQogICAgICAgICAgICAgICAgdHlwZTogYm9vbGVhbgogICAgICAgICAgICAgIG5vZGVTZWxlY3RvcjoKICAgICAgICAgICAgICAgIHR5cGU6IG9iamVjdAogICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IERyb3AgbG9nZ2luZyBpcyBlbmFibGVkIG9uIG5vZGVzIHNlbGVjdGVkIGJhc2VkIG9uIGxhYmVscwogICAgICAgICAgICAgICAgcHJvcGVydGllczoKICAgICAgICAgICAgICAgICAgbGFiZWxzOgogICAgICAgICAgICAgICAgICAgIHR5cGU6IG9iamVjdAogICAgICAgICAgICAgICAgICAgIHByb3BlcnRpZXM6CiAgICAgICAgICAgICAgICAgICAgYWRkaXRpb25hbFByb3BlcnRpZXM6CiAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmcKLS0tCmFwaVZlcnNpb246IGFwaWV4dGVuc2lvbnMuazhzLmlvL3YxCmtpbmQ6IEN1c3RvbVJlc291cmNlRGVmaW5pdGlvbgptZXRhZGF0YToKICBuYW1lOiBwcnVuZWRyb3Bsb2dzLmFjaS5kcm9wbG9nCnNwZWM6CiAgZ3JvdXA6IGFjaS5kcm9wbG9nCiAgbmFtZXM6CiAgICBraW5kOiBQcnVuZURyb3BMb2cKICAgIGxpc3RLaW5kOiBQcnVuZURyb3BMb2dMaXN0CiAgICBwbHVyYWw6IHBydW5lZHJvcGxvZ3MKICAgIHNpbmd1bGFyOiBwcnVuZWRyb3Bsb2cKICBzY29wZTogQ2x1c3RlcgogIHZlcnNpb25zOgogIC0gbmFtZTogdjFhbHBoYTEKICAgIHNlcnZlZDogdHJ1ZQogICAgc3RvcmFnZTogdHJ1ZQogICAgc2NoZW1hOgogICAjIG9wZW5BUElWM1NjaGVtYSBpcyB0aGUgc2NoZW1hIGZvciB2YWxpZGF0aW5nIGN1c3RvbSBvYmplY3RzLgogICAgICBvcGVuQVBJVjNTY2hlbWE6CiAgICAgICAgdHlwZTogb2JqZWN0CiAgICAgICAgcHJvcGVydGllczoKICAgICAgICAgIGFwaVZlcnNpb246CiAgICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAga2luZDoKICAgICAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgICBzcGVjOgogICAgICAgICAgICBkZXNjcmlwdGlvbjogRGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBQcnVuZURyb3BMb2cKICAgICAgICAgICAgdHlwZTogb2JqZWN0CiAgICAgICAgICAgIHByb3BlcnRpZXM6CiAgICAgICAgICAgICAgbm9kZVNlbGVjdG9yOgogICAgICAgICAgICAgICAgdHlwZTogb2JqZWN0CiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogRHJvcCBsb2dnaW5nIGZpbHRlcnMgYXJlIGFwcGxpZWQgdG8gbm9kZXMgc2VsZWN0ZWQgYmFzZWQgb24gbGFiZWxzCiAgICAgICAgICAgICAgICBwcm9wZXJ0aWVzOgogICAgICAgICAgICAgICAgICBsYWJlbHM6CiAgICAgICAgICAgICAgICAgICAgdHlwZTogb2JqZWN0CiAgICAgICAgICAgICAgICAgICAgcHJvcGVydGllczoKICAgICAgICAgICAgICAgICAgICBhZGRpdGlvbmFsUHJvcGVydGllczoKICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAgICAgIGRyb3BMb2dGaWx0ZXJzOgogICAgICAgICAgICAgICAgdHlwZTogb2JqZWN0CiAgICAgICAgICAgICAgICBwcm9wZXJ0aWVzOgogICAgICAgICAgICAgICAgICBzcmNJUDoKICAgICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmcKICAgICAgICAgICAgICAgICAgZGVzdElQOgogICAgICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZwogICAgICAgICAgICAgICAgICBzcmNNQUM6CiAgICAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgICAgICAgICAgIGRlc3RNQUM6CiAgICAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nCiAgICAgICAgICAgICAgICAgIHNyY1BvcnQ6CiAgICAgICAgICAgICAgICAgICAgdHlwZTogaW50ZWdlcgogICAgICAgICAgICAgICAgICBkZXN0UG9ydDoKICAgICAgICAgICAgICAgICAgICB0eXBlOiBpbnRlZ2VyCiAgICAgICAgICAgICAgICAgIGlwUHJvdG86CiAgICAgICAgICAgICAgICAgICAgdHlwZTogaW50ZWdlcgotLS0KYXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnTWFwCm1ldGFkYXRhOgogIG5hbWU6IGFjaS1jb250YWluZXJzLWNvbmZpZwogIG5hbWVzcGFjZTogYWNpLWNvbnRhaW5lcnMtc3lzdGVtCiAgbGFiZWxzOgogICAgYWNpLWNvbnRhaW5lcnMtY29uZmlnLXZlcnNpb246ICJhMTg4MzQxZi1hZjFjLTQ4OTQtYmRmNi1lNjhhYTYxNmNjZmEiCiAgICBuZXR3b3JrLXBsdWdpbjogYWNpLWNvbnRhaW5lcnMKZGF0YToKICBjb250cm9sbGVyLWNvbmZpZzogfC0KICAgIHsKICAgICAgICAiZmxhdm9yIjogImt1YmVybmV0ZXMtMS4yNCIsCiAgICAgICAgImxvZy1sZXZlbCI6ICJkZWJ1ZyIsCiAgICAgICAgImFwaWMtaG9zdHMiOiBbCiAgICAgICAgICAgICIxMC4zMC4xMjAuMTQwIgogICAgICAgIF0sCiAgICAgICAgImFwaWMtdXNlcm5hbWUiOiAiYm0yYWNpIiwKICAgICAgICAiYXBpYy1wcml2YXRlLWtleS1wYXRoIjogIi91c3IvbG9jYWwvZXRjL2FjaS1jZXJ0L3VzZXIua2V5IiwKICAgICAgICAiYWNpLXByZWZpeCI6ICJibTJhY2kiLAogICAgICAgICJhY2ktdm1tLXR5cGUiOiAiS3ViZXJuZXRlcyIsCiAgICAgICAgImFjaS12bW0tZG9tYWluIjogImJtMmFjaSIsCiAgICAgICAgImFjaS12bW0tY29udHJvbGxlciI6ICJibTJhY2kiLAogICAgICAgICJhY2ktcG9saWN5LXRlbmFudCI6ICJibTJhY2kiLAogICAgICAgICJhY2ktcG9kYmQtZG4iOiAidW5pL3RuLWJtMmFjaS9CRC1hY2ktY29udGFpbmVycy1ibTJhY2ktcG9kLWJkIiwKICAgICAgICAiYWNpLW5vZGViZC1kbiI6ICJ1bmkvdG4tYm0yYWNpL0JELWFjaS1jb250YWluZXJzLWJtMmFjaS1ub2RlLWJkIiwKICAgICAgICAiYWNpLXNlcnZpY2UtcGh5cy1kb20iOiAiYm0yYWNpLXBkb20iLAogICAgICAgICJhY2ktc2VydmljZS1lbmNhcCI6ICJ2bGFuLTEwMiIsCiAgICAgICAgImFjaS1zZXJ2aWNlLW1vbml0b3ItaW50ZXJ2YWwiOiA1LAogICAgICAgICJhY2ktcGJyLXRyYWNraW5nLW5vbi1zbmF0IjogZmFsc2UsCiAgICAgICAgImFjaS12cmYtdGVuYW50IjogImNvbW1vbiIsCiAgICAgICAgImFjaS12cmYtZG4iOiAidW5pL3RuLWNvbW1vbi9jdHgtc2F1dG9fbDNvdXQtMV92cmYiLAogICAgICAgICJhY2ktbDNvdXQiOiAic2F1dG9fbDNvdXQtMSIsCiAgICAgICAgImFjaS1leHQtbmV0d29ya3MiOiBbCiAgICAgICAgICAgICJzYXV0b19sM291dC0xX2VwZyIKICAgICAgICBdLAogICAgICAgICJhY2ktdnJmIjogInNhdXRvX2wzb3V0LTFfdnJmIiwKICAgICAgICAiZGVmYXVsdC1lbmRwb2ludC1ncm91cCI6IHsKICAgICAgICAgICAgInBvbGljeS1zcGFjZSI6ICJibTJhY2kiLAogICAgICAgICAgICAibmFtZSI6ICJhY2ktY29udGFpbmVycy1ibTJhY2l8YWNpLWNvbnRhaW5lcnMtZGVmYXVsdCIKICAgICAgICB9LAogICAgICAgICJtYXgtbm9kZXMtc3ZjLWdyYXBoIjogMzIsCiAgICAgICAgIm5hbWVzcGFjZS1kZWZhdWx0LWVuZHBvaW50LWdyb3VwIjogewogICAgICAgICAgICAiYWNpLWNvbnRhaW5lcnMtc3lzdGVtIjogewogICAgICAgICAgICAgICAgInBvbGljeS1zcGFjZSI6ICJibTJhY2kiLAogICAgICAgICAgICAgICAgIm5hbWUiOiAiYWNpLWNvbnRhaW5lcnMtYm0yYWNpfGFjaS1jb250YWluZXJzLXN5c3RlbSIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgImlzdGlvLW9wZXJhdG9yIjogewogICAgICAgICAgICAgICAgInBvbGljeS1zcGFjZSI6ICJibTJhY2kiLAogICAgICAgICAgICAgICAgIm5hbWUiOiAiYWNpLWNvbnRhaW5lcnMtYm0yYWNpfGFjaS1jb250YWluZXJzLWlzdGlvIgogICAgICAgICAgICB9LAogICAgICAgICAgICAiaXN0aW8tc3lzdGVtIjogewogICAgICAgICAgICAgICAgInBvbGljeS1zcGFjZSI6ICJibTJhY2kiLAogICAgICAgICAgICAgICAgIm5hbWUiOiAiYWNpLWNvbnRhaW5lcnMtYm0yYWNpfGFjaS1jb250YWluZXJzLWlzdGlvIgogICAgICAgICAgICB9LAogICAgICAgICAgICAia3ViZS1zeXN0ZW0iOiB7CiAgICAgICAgICAgICAgICAicG9saWN5LXNwYWNlIjogImJtMmFjaSIsCiAgICAgICAgICAgICAgICAibmFtZSI6ICJhY2ktY29udGFpbmVycy1ibTJhY2l8YWNpLWNvbnRhaW5lcnMtc3lzdGVtIgogICAgICAgICAgICB9ICAgICAgICB9LAogICAgICAgICJzZXJ2aWNlLWlwLXBvb2wiOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJlbmQiOiAiMTAuMy4yNTUuMjU0IiwKICAgICAgICAgICAgICAgICJzdGFydCI6ICIxMC4zLjAuMiIKICAgICAgICAgICAgfQogICAgICAgIF0sIAogICAgICAgICJleHRlcm4tc3RhdGljIjogIjEwLjQuMC4xLzE2IiwKICAgICAgICAiZXh0ZXJuLWR5bmFtaWMiOiAiMTAuMy4wLjEvMTYiLAogICAgICAgICJzbmF0LWNvbnRyYWN0LXNjb3BlIjogImdsb2JhbCIsCiAgICAgICAgInN0YXRpYy1zZXJ2aWNlLWlwLXBvb2wiOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJlbmQiOiAiMTAuNC4yNTUuMjU0IiwKICAgICAgICAgICAgICAgICJzdGFydCI6ICIxMC40LjAuMiIKICAgICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgInBvZC1pcC1wb29sIjogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiZW5kIjogIjEwLjYuMjU1LjI1NCIsCiAgICAgICAgICAgICAgICAic3RhcnQiOiAiMTAuNi4wLjIiCiAgICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJwb2Qtc3VibmV0LWNodW5rLXNpemUiOiAzMiwKICAgICAgICAibm9kZS1zZXJ2aWNlLWlwLXBvb2wiOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJlbmQiOiAiMTAuNS4yNTUuMjU0IiwKICAgICAgICAgICAgICAgICJzdGFydCI6ICIxMC41LjAuMiIKICAgICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgIm5vZGUtc2VydmljZS1zdWJuZXRzIjogWwogICAgICAgICAgICAiMTAuNS4wLjEvMTYiCiAgICAgICAgXQogICAgfQogIGhvc3QtYWdlbnQtY29uZmlnOiB8LQogICAgewogICAgICAgICJmbGF2b3IiOiAia3ViZXJuZXRlcy0xLjI0IiwKICAgICAgICAiYXBwLXByb2ZpbGUiOiAiYWNpLWNvbnRhaW5lcnMtYm0yYWNpIiwKICAgICAgICAib3BmbGV4LW1vZGUiOiBudWxsLAogICAgICAgICJsb2ctbGV2ZWwiOiAiZGVidWciLAogICAgICAgICJhY2ktc25hdC1uYW1lc3BhY2UiOiAiYWNpLWNvbnRhaW5lcnMtc3lzdGVtIiwKICAgICAgICAiYWNpLXZtbS10eXBlIjogIkt1YmVybmV0ZXMiLAogICAgICAgICJhY2ktdm1tLWRvbWFpbiI6ICJibTJhY2kiLAogICAgICAgICJhY2ktdm1tLWNvbnRyb2xsZXIiOiAiYm0yYWNpIiwKICAgICAgICAiYWNpLXByZWZpeCI6ICJibTJhY2kiLAogICAgICAgICJhY2ktdnJmIjogInNhdXRvX2wzb3V0LTFfdnJmIiwKICAgICAgICAiYWNpLXZyZi10ZW5hbnQiOiAiY29tbW9uIiwKICAgICAgICAic2VydmljZS12bGFuIjogMTAyLAogICAgICAgICJrdWJlYXBpLXZsYW4iOiAxMDEsCiAgICAgICAgInBvZC1zdWJuZXQiOiAiMTAuNi4wLjEvMTYiLAogICAgICAgICJub2RlLXN1Ym5ldCI6ICIxLjEwMC4xMDEuMS8yNCIsCiAgICAgICAgImVuY2FwLXR5cGUiOiAidnhsYW4iLAogICAgICAgICJhY2ktaW5mcmEtdmxhbiI6IDQwOTMsCiAgICAgICAgImNuaS1uZXRjb25maWciOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJnYXRld2F5IjogIjEwLjYuMC4xIiwKICAgICAgICAgICAgICAgICJyb3V0ZXMiOiBbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiZHN0IjogIjAuMC4wLjAvMCIsCiAgICAgICAgICAgICAgICAgICAgICAgICJndyI6ICIxMC42LjAuMSIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgInN1Ym5ldCI6ICIxMC42LjAuMC8xNiIKICAgICAgICAgICAgfQogICAgICAgIF0sCiAgICAgICAgImRlZmF1bHQtZW5kcG9pbnQtZ3JvdXAiOiB7CiAgICAgICAgICAgICJwb2xpY3ktc3BhY2UiOiAiYm0yYWNpIiwKICAgICAgICAgICAgIm5hbWUiOiAiYWNpLWNvbnRhaW5lcnMtYm0yYWNpfGFjaS1jb250YWluZXJzLWRlZmF1bHQiCiAgICAgICAgfSwKICAgICAgICAibmFtZXNwYWNlLWRlZmF1bHQtZW5kcG9pbnQtZ3JvdXAiOiB7CiAgICAgICAgICAgICJhY2ktY29udGFpbmVycy1zeXN0ZW0iOiB7CiAgICAgICAgICAgICAgICAicG9saWN5LXNwYWNlIjogImJtMmFjaSIsCiAgICAgICAgICAgICAgICAibmFtZSI6ICJhY2ktY29udGFpbmVycy1ibTJhY2l8YWNpLWNvbnRhaW5lcnMtc3lzdGVtIgogICAgICAgICAgICB9LAogICAgICAgICAgICAiaXN0aW8tb3BlcmF0b3IiOiB7CiAgICAgICAgICAgICAgICAicG9saWN5LXNwYWNlIjogImJtMmFjaSIsCiAgICAgICAgICAgICAgICAibmFtZSI6ICJhY2ktY29udGFpbmVycy1ibTJhY2l8YWNpLWNvbnRhaW5lcnMtaXN0aW8iCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJpc3Rpby1zeXN0ZW0iOiB7CiAgICAgICAgICAgICAgICAicG9saWN5LXNwYWNlIjogImJtMmFjaSIsCiAgICAgICAgICAgICAgICAibmFtZSI6ICJhY2ktY29udGFpbmVycy1ibTJhY2l8YWNpLWNvbnRhaW5lcnMtaXN0aW8iCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJrdWJlLXN5c3RlbSI6IHsKICAgICAgICAgICAgICAgICJwb2xpY3ktc3BhY2UiOiAiYm0yYWNpIiwKICAgICAgICAgICAgICAgICJuYW1lIjogImFjaS1jb250YWluZXJzLWJtMmFjaXxhY2ktY29udGFpbmVycy1zeXN0ZW0iCiAgICAgICAgICAgIH0gICAgICAgIH0sCiAgICAgICAgImVuYWJsZS1kcm9wLWxvZyI6IHRydWUsCiAgICAgICAgImVuYWJsZS1ub2RlcG9kaWYiOiBmYWxzZSwKICAgICAgICAiZW5hYmxlLW92cy1ody1vZmZsb2FkIjogZmFsc2UKICAgIH0KICBvcGZsZXgtYWdlbnQtY29uZmlnOiB8LQogICAgewogICAgICAgICJsb2ciOiB7CiAgICAgICAgICAgICJsZXZlbCI6ICJkZWJ1ZyIKICAgICAgICB9LAogICAgICAgICJvcGZsZXgiOiB7CiAgICAgICAgICAgICJub3RpZiIgOiB7ICJlbmFibGVkIiA6ICJmYWxzZSIgfQogICAgICAgIH0sCiAgICAgICAgInByb21ldGhldXMiOiB7CiAgICAgICAgICAgICJlbmFibGVkIjogImZhbHNlIgogICAgICAgIH0KICAgIH0KLS0tCmFwaVZlcnNpb246IHYxCmtpbmQ6IENvbmZpZ01hcAptZXRhZGF0YToKICBuYW1lOiBzbmF0LW9wZXJhdG9yLWNvbmZpZwogIG5hbWVzcGFjZTogYWNpLWNvbnRhaW5lcnMtc3lzdGVtCiAgbGFiZWxzOgogICAgYWNpLWNvbnRhaW5lcnMtY29uZmlnLXZlcnNpb246ICJhMTg4MzQxZi1hZjFjLTQ4OTQtYmRmNi1lNjhhYTYxNmNjZmEiCiAgICBuZXR3b3JrLXBsdWdpbjogYWNpLWNvbnRhaW5lcnMKZGF0YToKICAgICJzdGFydCI6ICI1MDAwIgogICAgImVuZCI6ICI2NTAwMCIKICAgICJwb3J0cy1wZXItbm9kZSI6ICIzMDAwIgotLS0KYXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IGFjaS11c2VyLWNlcnQKICBuYW1lc3BhY2U6IGFjaS1jb250YWluZXJzLXN5c3RlbQogIGxhYmVsczoKICAgIGFjaS1jb250YWluZXJzLWNvbmZpZy12ZXJzaW9uOiAiYTE4ODM0MWYtYWYxYy00ODk0LWJkZjYtZTY4YWE2MTZjY2ZhIgpkYXRhOgogIHVzZXIua2V5OiBMUzB0TFMxQ1JVZEpUaUJRVWtsV1FWUkZJRXRGV1MwdExTMHRDazFKU1VOa1VVbENRVVJCVGtKbmEzRm9hMmxIT1hjd1FrRlJSVVpCUVZORFFXdzRkMmRuU21KQlowVkJRVzlIUWtGTWMzWXZZVEZEYmxwWFRUSXhRa0VLWkZCM2VYaHlUMkZUVFdZeVZtNTZSMUZhSzJrNVNtTkNObVJUYjJSck1tUkdWM1UyUVVFNUx5dFZSM0I1TDAxRFRrNURaWE12V0hGNGIzWnVWbVU0WVFwRVNrTnVTSG8wVDFBMVVFMU5iMnBtYjJwS2VtbDFRbWdyTkdGa1VWaG1VMGRMTkVneE5UUmxVRmxKZERkNWMyNXJOa1F5VlhreFJYWjZORkpzTnk5ckNqUmtTMUZMUkRSWVoyc3lNbEpuUWxwcVVITk1OVXRsVlZCRGRscEJaMDFDUVVGRlEyZFpRa0ZHUkRaM1MwVlVVRFZGWkZSdmNUQndhRXQ0VnpSWVRWY0tNbEJLYTJodE5FTnRkMDVIUTI5aGEyOVJURmR6VUdGaVUxUkpjVWhFU1ZVd01qWmFRWFZHV0hCWGVWQjFPRFEyUzBob1dHZE5RbUZoU1hWa01sSlpOQXBzTlRaclFWSnlUR0ZhTjNOQ00wNU1UbWxRVkhBd1VtaFRjMVJ1Y1dwcVoxWklRamxCVDIxeVdEZFViV2hLYmpORWFpOHlhWHBNTVRscWNtWnhhMjlLQ2xORGIyTnlUVWxGWW1WamRsTnpURzVqVVVwQ1FWQktVVUp1ZVZaNVZsZFpURkI0YXpGM2NXWk9iR1ZOVVRkR2JEQk5halJCYzJjNFN6RTVUbEJxT1RNS2RYQlpWMFprZEc1Nk5GZGFSbGhYZFRkNVN6VjBObVJzYVd0bk9VdG5lRGxKTUZsa01VUXpjVkpETUVOUlVVUkdkM1JPV0V4TmNGRlhWVnBFU2xkRWRnbzRVSHB6V0VoNlMxUnlNWGhOVlRKQlpVVmtSRWR4U2pGWGRHMUdOMDVyTm1nellYSlBZM2gyZDBrd1NUSlNSMFpwUzBwUlVsWlFTbFpDUkVsRmVIRnVDbkZxV0dSQmEwSlFXbGt4WVd0VVNIaFRMMWRvYkdWRmIxbzVZa1ZvVURsQ1VqRXhUVWhKWlRneVNYQldjR1JsTlhOQ0swSlJhV1JVVW5kaGJXWmxlV01LVEZBdlMxaDRVV2RWTlUxc04waFRNSFIxVVhnck1rRnhSVmhNV2tGclFXRjVWMjUzS3l0emJtVlJRWGRhYVdFNFQxZHpORFZOYjNWaFVETXlSVUpUVFFwWGVqVnFNRE0yTHpSS09XOUxXVEl2UWsxNFNrbDRiMU0xVVZReFpIUnRUblZrVlhGb1JXd3lSWE5JTTBvNFpFeG5TakowUVd0Q1l6Sm1iRlp2ZUhoQ0NrcGhTek5zYXpWd1J6STNiSGRGU0dsbFQyUkpSamRKVlhGNGRUaHhSV1prYzFCVkwwUk9ZM1p4VVd0UU9WQlRhWEo1UjBWaGNWVktXRlJMZFhsRFNrVUtlV28yV1V4RlozcEVSMFZXQ2kwdExTMHRSVTVFSUZCU1NWWkJWRVVnUzBWWkxTMHRMUzBLCiAgdXNlci5jcnQ6IExTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENrMUpTVUkxYWtORFFWVTRRMEZuVUc5TlFUQkhRMU54UjFOSllqTkVVVVZDUWxGVlFVMUVjM2hEZWtGS1FtZE9Wa0pCV1ZSQmJGWlVUVkpaZDBaQldVUUtWbEZSUzBSQk1VUmhXRTVxWW5sQ1ZHVllUakJhVnpGNlRWSlJkMFZuV1VSV1VWRkVSRUYwVm1NeVZubEpSMHAwVFcxR2FtRlVRV1ZHZHpCNVRXcEZkd3BOUkdONFRXcEplazFVV21GR2R6QjZUV3BGZDAxRVZYZE5SRWw2VFZSYVlVMUVjM2hEZWtGS1FtZE9Wa0pCV1ZSQmJGWlVUVkpaZDBaQldVUldVVkZMQ2tSQk1VUmhXRTVxWW5sQ1ZHVllUakJhVnpGNlRWSlJkMFZuV1VSV1VWRkVSRUYwVm1NeVZubEpSMHAwVFcxR2FtRlVRMEp1ZWtGT1FtZHJjV2hyYVVjS09YY3dRa0ZSUlVaQlFVOUNhbEZCZDJkWmEwTm5XVVZCZFhrdk9YSlZTMlJzV1hwaVZVVkNNQzlFVEVkek5YQkplQzlhVjJaTldrSnVOa3d3YkhkSWNBb3hTMmd5VkZvd1ZtRTNiMEZFTXk4MVVXRnVURGgzU1RBd1NqWjZPV1Z5UjJrclpGWTNlRzlOYTB0alpsQm5OQzlyT0hkNWFVNHJhVTF1VDBzMFIwZzNDbWh3TVVKa09VbFpjbWRtV0c1b05EbG5hVE4yUzNsbFZHOVFXbFJNVlZNdlVHaEhXSFlyVkdnd2NFRnZVR2hsUTFSaVdrZEJSbTFOSzNkMmEzQTFVVGdLU3psclEwRjNSVUZCVkVGT1FtZHJjV2hyYVVjNWR6QkNRVkZWUmtGQlQwSm5VVUZrVkZwdU5qZ3dOelUwUzFOaE9UQkhRVGN2Um1WeE1HdDZXVEJoT0FwR2VYRkpMekZQY0djclFqQlNSVWQ0V25kd1FVOVVhMU55WjBad01GUldXamxzTTBKTGNFNTVWV1EzVFU5MlJUZGFTR3N6ZUdoS1NGRjZOekF3UnpWR0NtVm5TWE4yU0Rka2FGWkZibkp0Vm1WQlpra3piazVNU1RoNFptNUdjVTFhTDNGRU1VRlJRM0l3ZWxsS2QzUnRSVGxXZUVKM2JXMVJVRVF5TTNocmEyWUtVakUyWkVsUlJVSnRZMUJtY1VFOVBRb3RMUzB0TFVWT1JDQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENnPT0KLS0tCmFwaVZlcnNpb246IHYxCmtpbmQ6IFNlcnZpY2VBY2NvdW50Cm1ldGFkYXRhOgogIG5hbWU6IGFjaS1jb250YWluZXJzLWNvbnRyb2xsZXIKICBuYW1lc3BhY2U6IGFjaS1jb250YWluZXJzLXN5c3RlbQogIGxhYmVsczoKICAgIGFjaS1jb250YWluZXJzLWNvbmZpZy12ZXJzaW9uOiAiYTE4ODM0MWYtYWYxYy00ODk0LWJkZjYtZTY4YWE2MTZjY2ZhIgotLS0KYXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZUFjY291bnQKbWV0YWRhdGE6CiAgbmFtZTogYWNpLWNvbnRhaW5lcnMtaG9zdC1hZ2VudAogIG5hbWVzcGFjZTogYWNpLWNvbnRhaW5lcnMtc3lzdGVtCiAgbGFiZWxzOgogICAgYWNpLWNvbnRhaW5lcnMtY29uZmlnLXZlcnNpb246ICJhMTg4MzQxZi1hZjFjLTQ4OTQtYmRmNi1lNjhhYTYxNmNjZmEiCi0tLQphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCmtpbmQ6IENsdXN0ZXJSb2xlCm1ldGFkYXRhOgogIGxhYmVsczoKICAgIGFjaS1jb250YWluZXJzLWNvbmZpZy12ZXJzaW9uOiAiYTE4ODM0MWYtYWYxYy00ODk0LWJkZjYtZTY4YWE2MTZjY2ZhIgogICAgbmV0d29yay1wbHVnaW46IGFjaS1jb250YWluZXJzCiAgbmFtZTogYWNpLWNvbnRhaW5lcnM6Y29udHJvbGxlcgpydWxlczoKLSBhcGlHcm91cHM6CiAgLSAiIgogIHJlc291cmNlczoKICAtIG5vZGVzCiAgLSBuYW1lc3BhY2VzCiAgLSBwb2RzCiAgLSBlbmRwb2ludHMKICAtIHNlcnZpY2VzCiAgLSBldmVudHMKICAtIHJlcGxpY2F0aW9uY29udHJvbGxlcnMKICAtIHNlcnZpY2VhY2NvdW50cwogIHZlcmJzOgogIC0gbGlzdAogIC0gd2F0Y2gKICAtIGdldAogIC0gcGF0Y2gKICAtIGNyZWF0ZQogIC0gdXBkYXRlCiAgLSBkZWxldGUKLSBhcGlHcm91cHM6CiAgLSAiIgogIHJlc291cmNlczoKICAtIGNvbmZpZ21hcHMKICB2ZXJiczoKICAtIGxpc3QKICAtIHdhdGNoCiAgLSBnZXQKICAtIGNyZWF0ZQogIC0gdXBkYXRlCiAgLSBkZWxldGUKLSBhcGlHcm91cHM6CiAgLSAiYXBpZXh0ZW5zaW9ucy5rOHMuaW8iCiAgcmVzb3VyY2VzOgogIC0gY3VzdG9tcmVzb3VyY2VkZWZpbml0aW9ucwogIHZlcmJzOgogIC0gJyonCi0gYXBpR3JvdXBzOgogIC0gInJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8iCiAgcmVzb3VyY2VzOgogIC0gY2x1c3RlcnJvbGVzCiAgLSBjbHVzdGVycm9sZWJpbmRpbmdzCiAgdmVyYnM6CiAgLSAnKicKLSBhcGlHcm91cHM6CiAgLSAibmV0d29ya2luZy5rOHMuaW8iCiAgcmVzb3VyY2VzOgogIC0gbmV0d29ya3BvbGljaWVzCiAgdmVyYnM6CiAgLSBsaXN0CiAgLSB3YXRjaAogIC0gZ2V0Ci0gYXBpR3JvdXBzOgogIC0gImFwcHMiCiAgcmVzb3VyY2VzOgogIC0gZGVwbG95bWVudHMKICAtIHJlcGxpY2FzZXRzCiAgLSBkYWVtb25zZXRzCiAgLSBzdGF0ZWZ1bHNldHMKICB2ZXJiczoKICAtICcqJwotIGFwaUdyb3VwczoKICAtICIiCiAgcmVzb3VyY2VzOgogIC0gbm9kZXMKICAtIHNlcnZpY2VzL3N0YXR1cwogIHZlcmJzOgogIC0gdXBkYXRlCi0gYXBpR3JvdXBzOgogIC0gIm1vbml0b3JpbmcuY29yZW9zLmNvbSIKICByZXNvdXJjZXM6CiAgLSBzZXJ2aWNlbW9uaXRvcnMKICB2ZXJiczoKICAtIGdldAogIC0gY3JlYXRlCi0gYXBpR3JvdXBzOgogIC0gImFjaS5zbmF0IgogIHJlc291cmNlczoKICAtIHNuYXRwb2xpY2llcy9maW5hbGl6ZXJzCiAgLSBzbmF0cG9saWNpZXMvc3RhdHVzCiAgLSBub2RlaW5mb3MKICB2ZXJiczoKICAtIHVwZGF0ZQogIC0gY3JlYXRlCiAgLSBsaXN0CiAgLSB3YXRjaAogIC0gZ2V0CiAgLSBkZWxldGUKLSBhcGlHcm91cHM6CiAgLSAiYWNpLnNuYXQiCiAgcmVzb3VyY2VzOgogIC0gc25hdGdsb2JhbGluZm9zCiAgLSBzbmF0cG9saWNpZXMKICAtIG5vZGVpbmZvcwogIC0gcmRjb25maWdzCiAgdmVyYnM6CiAgLSBsaXN0CiAgLSB3YXRjaAogIC0gZ2V0CiAgLSBjcmVhdGUKICAtIHVwZGF0ZQogIC0gZGVsZXRlCi0gYXBpR3JvdXBzOgogIC0gImFjaS5xb3MiCiAgcmVzb3VyY2VzOgogIC0gcW9zcG9saWNpZXMKICB2ZXJiczoKICAtIGxpc3QKICAtIHdhdGNoCiAgLSBnZXQKICAtIGNyZWF0ZQogIC0gdXBkYXRlCiAgLSBkZWxldGUKICAtIHBhdGNoCi0gYXBpR3JvdXBzOgogIC0gImFjaS5uZXRmbG93IgogIHJlc291cmNlczoKICAtIG5ldGZsb3dwb2xpY2llcwogIHZlcmJzOgogIC0gbGlzdAogIC0gd2F0Y2gKICAtIGdldAogIC0gdXBkYXRlCi0gYXBpR3JvdXBzOgogIC0gImFjaS5lcnNwYW4iCiAgcmVzb3VyY2VzOgogIC0gZXJzcGFucG9saWNpZXMKICB2ZXJiczoKICAtIGxpc3QKICAtIHdhdGNoCiAgLSBnZXQKICAtIHVwZGF0ZQotIGFwaUdyb3VwczoKICAtICJhY2kuYXciCiAgcmVzb3VyY2VzOgogIC0gbm9kZXBvZGlmcwogIHZlcmJzOgogIC0gJyonCi0gYXBpR3JvdXBzOgogIC0gYXBwcy5vcGVuc2hpZnQuaW8KICByZXNvdXJjZXM6CiAgLSBkZXBsb3ltZW50Y29uZmlncwogIHZlcmJzOgogIC0gbGlzdAogIC0gd2F0Y2gKICAtIGdldAotIGFwaUdyb3VwczoKICAtIGRpc2NvdmVyeS5rOHMuaW8KICByZXNvdXJjZXM6CiAgLSBlbmRwb2ludHNsaWNlcwogIHZlcmJzOgogIC0gZ2V0CiAgLSBsaXN0CiAgLSB3YXRjaAotIGFwaUdyb3VwczoKICAtICJhY2kubmV0cG9sIgogIHJlc291cmNlczoKICAtIG5ldHdvcmtwb2xpY2llcwogIHZlcmJzOgogIC0gZ2V0CiAgLSBsaXN0CiAgLSB3YXRjaAogIC0gY3JlYXRlCiAgLSB1cGRhdGUKICAtIGRlbGV0ZQotIGFwaUdyb3VwczoKICAtICJhY2kuZG5zbmV0cG9sIgogIHJlc291cmNlczoKICAtIGRuc25ldHdvcmtwb2xpY2llcwogIHZlcmJzOgogIC0gZ2V0CiAgLSBsaXN0CiAgLSB3YXRjaAogIC0gY3JlYXRlCiAgLSB1cGRhdGUKICAtIGRlbGV0ZQotLS0KYXBpVmVyc2lvbjogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MQpraW5kOiBDbHVzdGVyUm9sZQptZXRhZGF0YToKICBsYWJlbHM6CiAgICBhY2ktY29udGFpbmVycy1jb25maWctdmVyc2lvbjogImExODgzNDFmLWFmMWMtNDg5NC1iZGY2LWU2OGFhNjE2Y2NmYSIKICAgIG5ldHdvcmstcGx1Z2luOiBhY2ktY29udGFpbmVycwogIG5hbWU6IGFjaS1jb250YWluZXJzOmhvc3QtYWdlbnQKcnVsZXM6Ci0gYXBpR3JvdXBzOgogIC0gIiIKICByZXNvdXJjZXM6CiAgLSBub2RlcwogIC0gbmFtZXNwYWNlcwogIC0gcG9kcwogIC0gZW5kcG9pbnRzCiAgLSBzZXJ2aWNlcwogIC0gcmVwbGljYXRpb25jb250cm9sbGVycwogIHZlcmJzOgogIC0gbGlzdAogIC0gd2F0Y2gKICAtIGdldAogIC0gdXBkYXRlCi0gYXBpR3JvdXBzOgogIC0gIiIKICByZXNvdXJjZXM6CiAgLSBldmVudHMKICB2ZXJiczoKICAtIGNyZWF0ZQogIC0gcGF0Y2gKLSBhcGlHcm91cHM6CiAgLSAiYXBpZXh0ZW5zaW9ucy5rOHMuaW8iCiAgcmVzb3VyY2VzOgogIC0gY3VzdG9tcmVzb3VyY2VkZWZpbml0aW9ucwogIHZlcmJzOgogIC0gbGlzdAogIC0gd2F0Y2gKICAtIGdldAotIGFwaUdyb3VwczoKICAtICJuZXR3b3JraW5nLms4cy5pbyIKICByZXNvdXJjZXM6CiAgLSBuZXR3b3JrcG9saWNpZXMKICB2ZXJiczoKICAtIGxpc3QKICAtIHdhdGNoCiAgLSBnZXQKLSBhcGlHcm91cHM6CiAgLSAiYXBwcyIKICByZXNvdXJjZXM6CiAgLSBkZXBsb3ltZW50cwogIC0gcmVwbGljYXNldHMKICB2ZXJiczoKICAtIGxpc3QKICAtIHdhdGNoCiAgLSBnZXQKLSBhcGlHcm91cHM6CiAgLSAiYWNpLnNuYXQiCiAgcmVzb3VyY2VzOgogIC0gc25hdHBvbGljaWVzCiAgLSBzbmF0Z2xvYmFsaW5mb3MKICAtIHJkY29uZmlncwogIHZlcmJzOgogIC0gbGlzdAogIC0gd2F0Y2gKICAtIGdldAotIGFwaUdyb3VwczoKICAtICJhY2kucW9zIgogIHJlc291cmNlczoKICAtIHFvc3BvbGljaWVzCiAgdmVyYnM6CiAgLSBsaXN0CiAgLSB3YXRjaAogIC0gZ2V0CiAgLSBjcmVhdGUKICAtIHVwZGF0ZQogIC0gZGVsZXRlCiAgLSBwYXRjaAotIGFwaUdyb3VwczoKICAtICJhY2kuZHJvcGxvZyIKICByZXNvdXJjZXM6CiAgLSBlbmFibGVkcm9wbG9ncwogIC0gcHJ1bmVkcm9wbG9ncwogIHZlcmJzOgogIC0gbGlzdAogIC0gd2F0Y2gKICAtIGdldAotIGFwaUdyb3VwczoKICAtICJhY2kuc25hdCIKICByZXNvdXJjZXM6CiAgLSBub2RlaW5mb3MKICAtIHNuYXRsb2NhbGluZm9zCiAgdmVyYnM6CiAgLSBjcmVhdGUKICAtIHVwZGF0ZQogIC0gbGlzdAogIC0gd2F0Y2gKICAtIGdldAogIC0gZGVsZXRlCi0gYXBpR3JvdXBzOgogIC0gZGlzY292ZXJ5Lms4cy5pbwogIHJlc291cmNlczoKICAtIGVuZHBvaW50c2xpY2VzCiAgdmVyYnM6CiAgLSBnZXQKICAtIGxpc3QKICAtIHdhdGNoCi0gYXBpR3JvdXBzOgogIC0gImFjaS5uZXRwb2wiCiAgcmVzb3VyY2VzOgogIC0gbmV0d29ya3BvbGljaWVzCiAgdmVyYnM6CiAgLSBnZXQKICAtIGxpc3QKICAtIHdhdGNoCi0gYXBpR3JvdXBzOgogIC0gImFjaS5hdyIKICByZXNvdXJjZXM6CiAgLSBub2RlcG9kaWZzCiAgdmVyYnM6CiAgLSAiKiIKLS0tCmFwaVZlcnNpb246IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8vdjEKa2luZDogQ2x1c3RlclJvbGVCaW5kaW5nCm1ldGFkYXRhOgogIG5hbWU6IGFjaS1jb250YWluZXJzOmNvbnRyb2xsZXIKICBsYWJlbHM6CiAgICBhY2ktY29udGFpbmVycy1jb25maWctdmVyc2lvbjogImExODgzNDFmLWFmMWMtNDg5NC1iZGY2LWU2OGFhNjE2Y2NmYSIKcm9sZVJlZjoKICBhcGlHcm91cDogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pbwogIGtpbmQ6IENsdXN0ZXJSb2xlCiAgbmFtZTogYWNpLWNvbnRhaW5lcnM6Y29udHJvbGxlcgpzdWJqZWN0czoKLSBraW5kOiBTZXJ2aWNlQWNjb3VudAogIG5hbWU6IGFjaS1jb250YWluZXJzLWNvbnRyb2xsZXIKICBuYW1lc3BhY2U6IGFjaS1jb250YWluZXJzLXN5c3RlbQotLS0KYXBpVmVyc2lvbjogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MQpraW5kOiBDbHVzdGVyUm9sZUJpbmRpbmcKbWV0YWRhdGE6CiAgbmFtZTogYWNpLWNvbnRhaW5lcnM6aG9zdC1hZ2VudAogIGxhYmVsczoKICAgIGFjaS1jb250YWluZXJzLWNvbmZpZy12ZXJzaW9uOiAiYTE4ODM0MWYtYWYxYy00ODk0LWJkZjYtZTY4YWE2MTZjY2ZhIgpyb2xlUmVmOgogIGFwaUdyb3VwOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvCiAga2luZDogQ2x1c3RlclJvbGUKICBuYW1lOiBhY2ktY29udGFpbmVyczpob3N0LWFnZW50CnN1YmplY3RzOgotIGtpbmQ6IFNlcnZpY2VBY2NvdW50CiAgbmFtZTogYWNpLWNvbnRhaW5lcnMtaG9zdC1hZ2VudAogIG5hbWVzcGFjZTogYWNpLWNvbnRhaW5lcnMtc3lzdGVtCi0tLQphcGlWZXJzaW9uOiBhcHBzL3YxCmtpbmQ6IERhZW1vblNldAptZXRhZGF0YToKICBuYW1lOiBhY2ktY29udGFpbmVycy1ob3N0CiAgbmFtZXNwYWNlOiBhY2ktY29udGFpbmVycy1zeXN0ZW0KICBsYWJlbHM6CiAgICBhY2ktY29udGFpbmVycy1jb25maWctdmVyc2lvbjogImExODgzNDFmLWFmMWMtNDg5NC1iZGY2LWU2OGFhNjE2Y2NmYSIKICAgIG5ldHdvcmstcGx1Z2luOiBhY2ktY29udGFpbmVycwpzcGVjOgogIHVwZGF0ZVN0cmF0ZWd5OgogICAgdHlwZTogUm9sbGluZ1VwZGF0ZQogIHNlbGVjdG9yOgogICAgbWF0Y2hMYWJlbHM6CiAgICAgIG5hbWU6IGFjaS1jb250YWluZXJzLWhvc3QKICAgICAgbmV0d29yay1wbHVnaW46IGFjaS1jb250YWluZXJzCiAgdGVtcGxhdGU6CiAgICBtZXRhZGF0YToKICAgICAgbGFiZWxzOgogICAgICAgIG5hbWU6IGFjaS1jb250YWluZXJzLWhvc3QKICAgICAgICBuZXR3b3JrLXBsdWdpbjogYWNpLWNvbnRhaW5lcnMKICAgICAgYW5ub3RhdGlvbnM6CiAgICAgICAgc2NoZWR1bGVyLmFscGhhLmt1YmVybmV0ZXMuaW8vY3JpdGljYWwtcG9kOiAnJwogICAgICAgIHByb21ldGhldXMuaW8vc2NyYXBlOiAidHJ1ZSIKICAgICAgICBwcm9tZXRoZXVzLmlvL3BvcnQ6ICI5NjEyIgogICAgc3BlYzoKICAgICAgaG9zdE5ldHdvcms6IHRydWUKICAgICAgaG9zdFBJRDogdHJ1ZQogICAgICBob3N0SVBDOiB0cnVlCiAgICAgIHNlcnZpY2VBY2NvdW50TmFtZTogYWNpLWNvbnRhaW5lcnMtaG9zdC1hZ2VudAogICAgICBpbWFnZVB1bGxTZWNyZXRzOgogICAgICAgIC0gbmFtZTogJ25vaXJvLWRvY2tlci1yZWdpc3RyeS1zZWNyZXQnCiAgICAgIHRvbGVyYXRpb25zOgogICAgICAgIC0gb3BlcmF0b3I6IEV4aXN0cwogICAgICBwcmlvcml0eUNsYXNzTmFtZTogc3lzdGVtLWNsdXN0ZXItY3JpdGljYWwKICAgICAgY29udGFpbmVyczoKICAgICAgICAtIG5hbWU6IGFjaS1jb250YWluZXJzLWhvc3QKICAgICAgICAgIGltYWdlOiBxdWF5LmlvL25vaXJvbGFicy9hY2ktY29udGFpbmVycy1ob3N0OmttcjItdGVzdAogICAgICAgICAgaW1hZ2VQdWxsUG9saWN5OiBBbHdheXMKICAgICAgICAgIHNlY3VyaXR5Q29udGV4dDoKICAgICAgICAgICAgY2FwYWJpbGl0aWVzOgogICAgICAgICAgICAgIGFkZDoKICAgICAgICAgICAgICAgIC0gU1lTX0FETUlOCiAgICAgICAgICAgICAgICAtIE5FVF9BRE1JTgogICAgICAgICAgICAgICAgLSBTWVNfUFRSQUNFCiAgICAgICAgICAgICAgICAtIE5FVF9SQVcKICAgICAgICAgIGVudjoKICAgICAgICAgICAgLSBuYW1lOiBHT1RSQUNFQkFDSwogICAgICAgICAgICAgIHZhbHVlOiAiMiIKICAgICAgICAgICAgLSBuYW1lOiBLVUJFUk5FVEVTX05PREVfTkFNRQogICAgICAgICAgICAgIHZhbHVlRnJvbToKICAgICAgICAgICAgICAgIGZpZWxkUmVmOgogICAgICAgICAgICAgICAgICBmaWVsZFBhdGg6IHNwZWMubm9kZU5hbWUKICAgICAgICAgICAgLSBuYW1lOiBURU5BTlQKICAgICAgICAgICAgICB2YWx1ZTogImJtMmFjaSIKICAgICAgICAgICAgLSBuYW1lOiBOT0RFX0VQRwogICAgICAgICAgICAgIHZhbHVlOiAiYWNpLWNvbnRhaW5lcnMtYm0yYWNpfGFjaS1jb250YWluZXJzLW5vZGVzIgogICAgICAgICAgICAtIG5hbWU6IERVUkFUSU9OX1dBSVRfRk9SX05FVFdPUksKICAgICAgICAgICAgICB2YWx1ZTogIjIxMCIKICAgICAgICAgIHZvbHVtZU1vdW50czoKICAgICAgICAgICAgLSBuYW1lOiBjbmktYmluCiAgICAgICAgICAgICAgbW91bnRQYXRoOiAvbW50L2NuaS1iaW4KICAgICAgICAgICAgLSBuYW1lOiBjbmktY29uZgogICAgICAgICAgICAgIG1vdW50UGF0aDogL21udC9jbmktY29uZgogICAgICAgICAgICAtIG5hbWU6IGhvc3R2YXIKICAgICAgICAgICAgICBtb3VudFBhdGg6IC91c3IvbG9jYWwvdmFyCiAgICAgICAgICAgIC0gbmFtZTogaG9zdHJ1bgogICAgICAgICAgICAgIG1vdW50UGF0aDogL3J1bgogICAgICAgICAgICAtIG5hbWU6IGhvc3RydW4KICAgICAgICAgICAgICBtb3VudFBhdGg6IC91c3IvbG9jYWwvcnVuCiAgICAgICAgICAgIC0gbmFtZTogb3BmbGV4LWhvc3Rjb25maWctdm9sdW1lCiAgICAgICAgICAgICAgbW91bnRQYXRoOiAvdXNyL2xvY2FsL2V0Yy9vcGZsZXgtYWdlbnQtb3ZzL2Jhc2UtY29uZi5kCiAgICAgICAgICAgIC0gbmFtZTogaG9zdC1jb25maWctdm9sdW1lCiAgICAgICAgICAgICAgbW91bnRQYXRoOiAvdXNyL2xvY2FsL2V0Yy9hY2ktY29udGFpbmVycy8KICAgICAgICAgICAgLSBtb3VudFBhdGg6IC9ydW4vbmV0bnMKICAgICAgICAgICAgICBuYW1lOiBob3N0LXJ1bi1uZXRucwogICAgICAgICAgICAgIHJlYWRPbmx5OiB0cnVlCiAgICAgICAgICAgICAgbW91bnRQcm9wYWdhdGlvbjogSG9zdFRvQ29udGFpbmVyCiAgICAgICAgICBsaXZlbmVzc1Byb2JlOgogICAgICAgICAgICBmYWlsdXJlVGhyZXNob2xkOiAxMAogICAgICAgICAgICBodHRwR2V0OgogICAgICAgICAgICAgIHBhdGg6IC9zdGF0dXMKICAgICAgICAgICAgICBwb3J0OiA4MDkwCiAgICAgICAgICAgICAgc2NoZW1lOiBIVFRQCiAgICAgICAgICAgIGluaXRpYWxEZWxheVNlY29uZHM6IDEyMAogICAgICAgICAgICBwZXJpb2RTZWNvbmRzOiA2MAogICAgICAgICAgICBzdWNjZXNzVGhyZXNob2xkOiAxCiAgICAgICAgICAgIHRpbWVvdXRTZWNvbmRzOiAzMAogICAgICAgIC0gbmFtZTogb3BmbGV4LWFnZW50CiAgICAgICAgICBlbnY6CiAgICAgICAgICAgIC0gbmFtZTogUkVCT09UX1dJVEhfT1ZTCiAgICAgICAgICAgICAgdmFsdWU6ICJ0cnVlIgogICAgICAgICAgaW1hZ2U6IHF1YXkuaW8vbm9pcm9sYWJzL29wZmxleDprbXIyLXRlc3QKICAgICAgICAgIGltYWdlUHVsbFBvbGljeTogQWx3YXlzCiAgICAgICAgICBzZWN1cml0eUNvbnRleHQ6CiAgICAgICAgICAgIGNhcGFiaWxpdGllczoKICAgICAgICAgICAgICBhZGQ6CiAgICAgICAgICAgICAgICAtIE5FVF9BRE1JTgogICAgICAgICAgdm9sdW1lTW91bnRzOgogICAgICAgICAgICAtIG5hbWU6IGhvc3R2YXIKICAgICAgICAgICAgICBtb3VudFBhdGg6IC91c3IvbG9jYWwvdmFyCiAgICAgICAgICAgIC0gbmFtZTogaG9zdHJ1bgogICAgICAgICAgICAgIG1vdW50UGF0aDogL3J1bgogICAgICAgICAgICAtIG5hbWU6IGhvc3RydW4KICAgICAgICAgICAgICBtb3VudFBhdGg6IC91c3IvbG9jYWwvcnVuCiAgICAgICAgICAgIC0gbmFtZTogb3BmbGV4LWhvc3Rjb25maWctdm9sdW1lCiAgICAgICAgICAgICAgbW91bnRQYXRoOiAvdXNyL2xvY2FsL2V0Yy9vcGZsZXgtYWdlbnQtb3ZzL2Jhc2UtY29uZi5kCiAgICAgICAgICAgIC0gbmFtZTogb3BmbGV4LWNvbmZpZy12b2x1bWUKICAgICAgICAgICAgICBtb3VudFBhdGg6IC91c3IvbG9jYWwvZXRjL29wZmxleC1hZ2VudC1vdnMvY29uZi5kCiAgICAgICAgLSBuYW1lOiBtY2FzdC1kYWVtb24KICAgICAgICAgIGltYWdlOiBxdWF5LmlvL25vaXJvbGFicy9vcGZsZXg6a21yMi10ZXN0CiAgICAgICAgICBjb21tYW5kOiBbIi9iaW4vc2giXQogICAgICAgICAgYXJnczogWyIvdXNyL2xvY2FsL2Jpbi9sYXVuY2gtbWNhc3RkYWVtb24uc2giXQogICAgICAgICAgaW1hZ2VQdWxsUG9saWN5OiBBbHdheXMKICAgICAgICAgIHZvbHVtZU1vdW50czoKICAgICAgICAgICAgLSBuYW1lOiBob3N0dmFyCiAgICAgICAgICAgICAgbW91bnRQYXRoOiAvdXNyL2xvY2FsL3ZhcgogICAgICAgICAgICAtIG5hbWU6IGhvc3RydW4KICAgICAgICAgICAgICBtb3VudFBhdGg6IC9ydW4KICAgICAgICAgICAgLSBuYW1lOiBob3N0cnVuCiAgICAgICAgICAgICAgbW91bnRQYXRoOiAvdXNyL2xvY2FsL3J1bgogICAgICByZXN0YXJ0UG9saWN5OiBBbHdheXMKICAgICAgdm9sdW1lczoKICAgICAgICAtIG5hbWU6IGNuaS1iaW4KICAgICAgICAgIGhvc3RQYXRoOgogICAgICAgICAgICBwYXRoOiAvb3B0CiAgICAgICAgLSBuYW1lOiBjbmktY29uZgogICAgICAgICAgaG9zdFBhdGg6CiAgICAgICAgICAgIHBhdGg6IC9ldGMKICAgICAgICAtIG5hbWU6IGhvc3R2YXIKICAgICAgICAgIGhvc3RQYXRoOgogICAgICAgICAgICBwYXRoOiAvdmFyCiAgICAgICAgLSBuYW1lOiBob3N0cnVuCiAgICAgICAgICBob3N0UGF0aDoKICAgICAgICAgICAgcGF0aDogL3J1bgogICAgICAgIC0gbmFtZTogaG9zdC1jb25maWctdm9sdW1lCiAgICAgICAgICBjb25maWdNYXA6CiAgICAgICAgICAgIG5hbWU6IGFjaS1jb250YWluZXJzLWNvbmZpZwogICAgICAgICAgICBpdGVtczoKICAgICAgICAgICAgICAtIGtleTogaG9zdC1hZ2VudC1jb25maWcKICAgICAgICAgICAgICAgIHBhdGg6IGhvc3QtYWdlbnQuY29uZgogICAgICAgIC0gbmFtZTogb3BmbGV4LWhvc3Rjb25maWctdm9sdW1lCiAgICAgICAgICBlbXB0eURpcjoKICAgICAgICAgICAgbWVkaXVtOiBNZW1vcnkKICAgICAgICAtIG5hbWU6IG9wZmxleC1jb25maWctdm9sdW1lCiAgICAgICAgICBjb25maWdNYXA6CiAgICAgICAgICAgIG5hbWU6IGFjaS1jb250YWluZXJzLWNvbmZpZwogICAgICAgICAgICBpdGVtczoKICAgICAgICAgICAgICAtIGtleTogb3BmbGV4LWFnZW50LWNvbmZpZwogICAgICAgICAgICAgICAgcGF0aDogbG9jYWwuY29uZgogICAgICAgIC0gbmFtZTogaG9zdC1ydW4tbmV0bnMKICAgICAgICAgIGhvc3RQYXRoOgogICAgICAgICAgICBwYXRoOiAvcnVuL25ldG5zCi0tLQphcGlWZXJzaW9uOiBhcHBzL3YxCmtpbmQ6IERhZW1vblNldAptZXRhZGF0YToKICBuYW1lOiBhY2ktY29udGFpbmVycy1vcGVudnN3aXRjaAogIG5hbWVzcGFjZTogYWNpLWNvbnRhaW5lcnMtc3lzdGVtCiAgbGFiZWxzOgogICAgYWNpLWNvbnRhaW5lcnMtY29uZmlnLXZlcnNpb246ICJhMTg4MzQxZi1hZjFjLTQ4OTQtYmRmNi1lNjhhYTYxNmNjZmEiCiAgICBuZXR3b3JrLXBsdWdpbjogYWNpLWNvbnRhaW5lcnMKc3BlYzoKICB1cGRhdGVTdHJhdGVneToKICAgIHR5cGU6IFJvbGxpbmdVcGRhdGUKICBzZWxlY3RvcjoKICAgIG1hdGNoTGFiZWxzOgogICAgICBuYW1lOiBhY2ktY29udGFpbmVycy1vcGVudnN3aXRjaAogICAgICBuZXR3b3JrLXBsdWdpbjogYWNpLWNvbnRhaW5lcnMKICB0ZW1wbGF0ZToKICAgIG1ldGFkYXRhOgogICAgICBsYWJlbHM6CiAgICAgICAgbmFtZTogYWNpLWNvbnRhaW5lcnMtb3BlbnZzd2l0Y2gKICAgICAgICBuZXR3b3JrLXBsdWdpbjogYWNpLWNvbnRhaW5lcnMKICAgICAgYW5ub3RhdGlvbnM6CiAgICAgICAgc2NoZWR1bGVyLmFscGhhLmt1YmVybmV0ZXMuaW8vY3JpdGljYWwtcG9kOiAnJwogICAgc3BlYzoKICAgICAgaG9zdE5ldHdvcms6IHRydWUKICAgICAgaG9zdFBJRDogdHJ1ZQogICAgICBob3N0SVBDOiB0cnVlCiAgICAgIHNlcnZpY2VBY2NvdW50TmFtZTogYWNpLWNvbnRhaW5lcnMtaG9zdC1hZ2VudAogICAgICBpbWFnZVB1bGxTZWNyZXRzOgogICAgICAgIC0gbmFtZTogJ25vaXJvLWRvY2tlci1yZWdpc3RyeS1zZWNyZXQnCiAgICAgIHRvbGVyYXRpb25zOgogICAgICAgIC0gb3BlcmF0b3I6IEV4aXN0cwogICAgICBwcmlvcml0eUNsYXNzTmFtZTogc3lzdGVtLWNsdXN0ZXItY3JpdGljYWwKICAgICAgY29udGFpbmVyczoKICAgICAgICAtIG5hbWU6IGFjaS1jb250YWluZXJzLW9wZW52c3dpdGNoCiAgICAgICAgICBpbWFnZTogcXVheS5pby9ub2lyb2xhYnMvb3BlbnZzd2l0Y2g6a21yMi10ZXN0CiAgICAgICAgICBpbWFnZVB1bGxQb2xpY3k6IEFsd2F5cwogICAgICAgICAgcmVzb3VyY2VzOgogICAgICAgICAgICBsaW1pdHM6CiAgICAgICAgICAgICAgbWVtb3J5OiAiMC43NUdpIgogICAgICAgICAgc2VjdXJpdHlDb250ZXh0OgogICAgICAgICAgICBjYXBhYmlsaXRpZXM6CiAgICAgICAgICAgICAgYWRkOgogICAgICAgICAgICAgICAgLSBORVRfQURNSU4KICAgICAgICAgICAgICAgIC0gU1lTX01PRFVMRQogICAgICAgICAgICAgICAgLSBTWVNfTklDRQogICAgICAgICAgICAgICAgLSBJUENfTE9DSwogICAgICAgICAgZW52OgogICAgICAgICAgICAtIG5hbWU6IE9WU19SVU5ESVIKICAgICAgICAgICAgICB2YWx1ZTogL3Vzci9sb2NhbC92YXIvcnVuL29wZW52c3dpdGNoCiAgICAgICAgICB2b2x1bWVNb3VudHM6CiAgICAgICAgICAgIC0gbmFtZTogaG9zdHZhcgogICAgICAgICAgICAgIG1vdW50UGF0aDogL3Vzci9sb2NhbC92YXIKICAgICAgICAgICAgLSBuYW1lOiBob3N0cnVuCiAgICAgICAgICAgICAgbW91bnRQYXRoOiAvcnVuCiAgICAgICAgICAgIC0gbmFtZTogaG9zdHJ1bgogICAgICAgICAgICAgIG1vdW50UGF0aDogL3Vzci9sb2NhbC9ydW4KICAgICAgICAgICAgLSBuYW1lOiBob3N0ZXRjCiAgICAgICAgICAgICAgbW91bnRQYXRoOiAvdXNyL2xvY2FsL2V0YwogICAgICAgICAgICAtIG5hbWU6IGhvc3Rtb2R1bGVzCiAgICAgICAgICAgICAgbW91bnRQYXRoOiAvbGliL21vZHVsZXMKICAgICAgICAgIGxpdmVuZXNzUHJvYmU6CiAgICAgICAgICAgIGV4ZWM6CiAgICAgICAgICAgICAgY29tbWFuZDoKICAgICAgICAgICAgICAgIC0gL3Vzci9sb2NhbC9iaW4vbGl2ZW5lc3Mtb3ZzLnNoCiAgICAgIHJlc3RhcnRQb2xpY3k6IEFsd2F5cwogICAgICB2b2x1bWVzOgogICAgICAgIC0gbmFtZTogaG9zdGV0YwogICAgICAgICAgaG9zdFBhdGg6CiAgICAgICAgICAgIHBhdGg6IC9ldGMKICAgICAgICAtIG5hbWU6IGhvc3R2YXIKICAgICAgICAgIGhvc3RQYXRoOgogICAgICAgICAgICBwYXRoOiAvdmFyCiAgICAgICAgLSBuYW1lOiBob3N0cnVuCiAgICAgICAgICBob3N0UGF0aDoKICAgICAgICAgICAgcGF0aDogL3J1bgogICAgICAgIC0gbmFtZTogaG9zdG1vZHVsZXMKICAgICAgICAgIGhvc3RQYXRoOgogICAgICAgICAgICBwYXRoOiAvbGliL21vZHVsZXMKLS0tCmFwaVZlcnNpb246IGFwcHMvdjEKa2luZDogRGVwbG95bWVudAptZXRhZGF0YToKICBuYW1lOiBhY2ktY29udGFpbmVycy1jb250cm9sbGVyCiAgbmFtZXNwYWNlOiBhY2ktY29udGFpbmVycy1zeXN0ZW0KICBsYWJlbHM6CiAgICBhY2ktY29udGFpbmVycy1jb25maWctdmVyc2lvbjogImExODgzNDFmLWFmMWMtNDg5NC1iZGY2LWU2OGFhNjE2Y2NmYSIKICAgIG5ldHdvcmstcGx1Z2luOiBhY2ktY29udGFpbmVycwogICAgbmFtZTogYWNpLWNvbnRhaW5lcnMtY29udHJvbGxlcgpzcGVjOgogIHJlcGxpY2FzOiAxCiAgc3RyYXRlZ3k6CiAgICB0eXBlOiBSZWNyZWF0ZQogIHNlbGVjdG9yOgogICAgbWF0Y2hMYWJlbHM6CiAgICAgIG5hbWU6IGFjaS1jb250YWluZXJzLWNvbnRyb2xsZXIKICAgICAgbmV0d29yay1wbHVnaW46IGFjaS1jb250YWluZXJzCiAgdGVtcGxhdGU6CiAgICBtZXRhZGF0YToKICAgICAgbmFtZTogYWNpLWNvbnRhaW5lcnMtY29udHJvbGxlcgogICAgICBuYW1lc3BhY2U6IGFjaS1jb250YWluZXJzLXN5c3RlbQogICAgICBsYWJlbHM6CiAgICAgICAgbmFtZTogYWNpLWNvbnRhaW5lcnMtY29udHJvbGxlcgogICAgICAgIG5ldHdvcmstcGx1Z2luOiBhY2ktY29udGFpbmVycwogICAgICBhbm5vdGF0aW9uczoKICAgICAgICBzY2hlZHVsZXIuYWxwaGEua3ViZXJuZXRlcy5pby9jcml0aWNhbC1wb2Q6ICcnCiAgICBzcGVjOgogICAgICBob3N0TmV0d29yazogdHJ1ZQogICAgICBzZXJ2aWNlQWNjb3VudE5hbWU6IGFjaS1jb250YWluZXJzLWNvbnRyb2xsZXIKICAgICAgaW1hZ2VQdWxsU2VjcmV0czoKICAgICAgICAtIG5hbWU6ICdub2lyby1kb2NrZXItcmVnaXN0cnktc2VjcmV0JwogICAgICB0b2xlcmF0aW9uczoKICAgICAgICAtIGVmZmVjdDogTm9FeGVjdXRlCiAgICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgICAgICAgICB0b2xlcmF0aW9uU2Vjb25kczogNjAKICAgICAgICAtIGVmZmVjdDogTm9TY2hlZHVsZQogICAgICAgICAga2V5OiBub2RlLmt1YmVybmV0ZXMuaW8vbm90LXJlYWR5CiAgICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgICAgICAgLSBlZmZlY3Q6IE5vU2NoZWR1bGUKICAgICAgICAgIGtleTogbm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vbWFzdGVyCiAgICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgICAgIHByaW9yaXR5Q2xhc3NOYW1lOiBzeXN0ZW0tbm9kZS1jcml0aWNhbAogICAgICBjb250YWluZXJzOgogICAgICAgIC0gbmFtZTogYWNpLWNvbnRhaW5lcnMtY29udHJvbGxlcgogICAgICAgICAgaW1hZ2U6IHF1YXkuaW8vbm9pcm9sYWJzL2FjaS1jb250YWluZXJzLWNvbnRyb2xsZXI6a21yMi10ZXN0CiAgICAgICAgICBpbWFnZVB1bGxQb2xpY3k6IEFsd2F5cwogICAgICAgICAgZW52OgogICAgICAgICAgICAtIG5hbWU6IFdBVENIX05BTUVTUEFDRQogICAgICAgICAgICAgIHZhbHVlOiAiIgogICAgICAgICAgICAtIG5hbWU6IEFDSV9TTkFUX05BTUVTUEFDRQogICAgICAgICAgICAgIHZhbHVlOiAiYWNpLWNvbnRhaW5lcnMtc3lzdGVtIgogICAgICAgICAgICAtIG5hbWU6IEFDSV9TTkFHTE9CQUxJTkZPX05BTUUKICAgICAgICAgICAgICB2YWx1ZTogInNuYXRnbG9iYWxpbmZvIgogICAgICAgICAgICAtIG5hbWU6IEFDSV9SRENPTkZJR19OQU1FCiAgICAgICAgICAgICAgdmFsdWU6ICJyb3V0aW5nZG9tYWluLWNvbmZpZyIKICAgICAgICAgICAgLSBuYW1lOiBTWVNURU1fTkFNRVNQQUNFCiAgICAgICAgICAgICAgdmFsdWU6ICJhY2ktY29udGFpbmVycy1zeXN0ZW0iCiAgICAgICAgICB2b2x1bWVNb3VudHM6CiAgICAgICAgICAgIC0gbmFtZTogY29udHJvbGxlci1jb25maWctdm9sdW1lCiAgICAgICAgICAgICAgbW91bnRQYXRoOiAvdXNyL2xvY2FsL2V0Yy9hY2ktY29udGFpbmVycy8KICAgICAgICAgICAgLSBuYW1lOiBhY2ktdXNlci1jZXJ0LXZvbHVtZQogICAgICAgICAgICAgIG1vdW50UGF0aDogL3Vzci9sb2NhbC9ldGMvYWNpLWNlcnQvCiAgICAgICAgICBsaXZlbmVzc1Byb2JlOgogICAgICAgICAgICBmYWlsdXJlVGhyZXNob2xkOiAxMAogICAgICAgICAgICBodHRwR2V0OgogICAgICAgICAgICAgIHBhdGg6IC9zdGF0dXMKICAgICAgICAgICAgICBwb3J0OiA4MDkxCiAgICAgICAgICAgICAgc2NoZW1lOiBIVFRQCiAgICAgICAgICAgIGluaXRpYWxEZWxheVNlY29uZHM6IDEyMAogICAgICAgICAgICBwZXJpb2RTZWNvbmRzOiA2MAogICAgICAgICAgICBzdWNjZXNzVGhyZXNob2xkOiAxCiAgICAgICAgICAgIHRpbWVvdXRTZWNvbmRzOiAzMAogICAgICB2b2x1bWVzOgogICAgICAgIC0gbmFtZTogYWNpLXVzZXItY2VydC12b2x1bWUKICAgICAgICAgIHNlY3JldDoKICAgICAgICAgICAgc2VjcmV0TmFtZTogYWNpLXVzZXItY2VydAogICAgICAgIC0gbmFtZTogY29udHJvbGxlci1jb25maWctdm9sdW1lCiAgICAgICAgICBjb25maWdNYXA6CiAgICAgICAgICAgIG5hbWU6IGFjaS1jb250YWluZXJzLWNvbmZpZwogICAgICAgICAgICBpdGVtczoKICAgICAgICAgICAgICAtIGtleTogY29udHJvbGxlci1jb25maWcKICAgICAgICAgICAgICAgIHBhdGg6IGNvbnRyb2xsZXIuY29uZgo="
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: acc-provision-config
  namespace: aci-containers-system
  labels:
    aci-containers-config-version: "a188341f-af1c-4894-bdf6-e68aa616ccfa"
    network-plugin: aci-containers
data:
  spec: |-
    {
        "acc_provision_input": {
            "operator_managed_config": {
                "enable_updates": false
            },
            "aci_config": {
                "system_id": "bm2aci",
                "apic_hosts": [
                    "10.30.120.140"
                ],
                "aep": "bm-srvrs-aep",
                "vrf": {
                    "name": "sauto_l3out-1_vrf",
                    "tenant": "common"
                },
                "l3out": {
                    "name": "sauto_l3out-1",
                    "external_networks": [
                        "sauto_l3out-1_epg"
                    ]
                }
            },
            "registry": {
                "acc_provision_operator_version": "kmr2-test", 
                "aci_containers_controller_version": "kmr2-test", 
                "aci_containers_host_version": "kmr2-test", 
                "aci_containers_operator_version": "kmr2-test", 
                "cnideploy_version": "kmr2-test", 
                "image_prefix": "quay.io/noirolabs", 
                "image_pull_secret": "noiro-docker-registry-secret", 
                "network_operator_version": "cko-mvp-1", 
                "openvswitch_version": "kmr2-test", 
                "opflex_agent_version": "kmr2-test"
            },
            "kube_config": {
                "drop_log_config": {}, 
                "image_pull_policy": "Always", 
                "istio_config": {}, 
                "multus": {}, 
                "nodepodif_config": {}, 
                "operator_managed_config": {}, 
                "ovs_memory_limit": "0.75Gi", 
                "sriov_config": {}
 
            },
            "logging": {
               "controller_log_level": "debug", 
               "hostagent_log_level": "debug", 
               "opflexagent_log_level": "debug"
            },
            "net_config": {
                "infra_vlan": 4093,
                "service_vlan": 102, 
                "kubeapi_vlan": 101,
                "extern_static": "10.4.0.1/16",
                "extern_dynamic": "10.3.0.1/16",
                "node_svc_subnet": "10.5.0.1/16",
                "node_subnet": "1.100.101.1/24",
                "pod_subnet": "10.6.0.1/16"
            }
        }
     }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: aci-containers-config
  namespace: aci-containers-system
  labels:
    aci-containers-config-version: "a188341f-af1c-4894-bdf6-e68aa616ccfa"
    network-plugin: aci-containers
data:
  controller-config: |-
    {
        "flavor": "kubernetes-1.24",
        "log-level": "debug",
        "apic-hosts": [
            "10.30.120.140"
        ],
        "apic-username": "bm2aci",
        "apic-private-key-path": "/usr/local/etc/aci-cert/user.key",
        "aci-prefix": "bm2aci",
        "aci-vmm-type": "Kubernetes",
        "aci-vmm-domain": "bm2aci",
        "aci-vmm-controller": "bm2aci",
        "aci-policy-tenant": "bm2aci",
        "aci-podbd-dn": "uni/tn-bm2aci/BD-aci-containers-bm2aci-pod-bd",
        "aci-nodebd-dn": "uni/tn-bm2aci/BD-aci-containers-bm2aci-node-bd",
        "aci-service-phys-dom": "bm2aci-pdom",
        "aci-service-encap": "vlan-102",
        "aci-service-monitor-interval": 5,
        "aci-pbr-tracking-non-snat": false,
        "aci-vrf-tenant": "common",
        "aci-vrf-dn": "uni/tn-common/ctx-sauto_l3out-1_vrf",
        "aci-l3out": "sauto_l3out-1",
        "aci-ext-networks": [
            "sauto_l3out-1_epg"
        ],
        "aci-vrf": "sauto_l3out-1_vrf",
        "default-endpoint-group": {
            "policy-space": "bm2aci",
            "name": "aci-containers-bm2aci|aci-containers-default"
        },
        "max-nodes-svc-graph": 32,
        "namespace-default-endpoint-group": {
            "aci-containers-system": {
                "policy-space": "bm2aci",
                "name": "aci-containers-bm2aci|aci-containers-system"
            },
            "istio-operator": {
                "policy-space": "bm2aci",
                "name": "aci-containers-bm2aci|aci-containers-istio"
            },
            "istio-system": {
                "policy-space": "bm2aci",
                "name": "aci-containers-bm2aci|aci-containers-istio"
            },
            "kube-system": {
                "policy-space": "bm2aci",
                "name": "aci-containers-bm2aci|aci-containers-system"
            }        },
        "service-ip-pool": [
            {
                "end": "10.3.255.254",
                "start": "10.3.0.2"
            }
        ], 
        "extern-static": "10.4.0.1/16",
        "extern-dynamic": "10.3.0.1/16",
        "snat-contract-scope": "global",
        "static-service-ip-pool": [
            {
                "end": "10.4.255.254",
                "start": "10.4.0.2"
            }
        ],
        "pod-ip-pool": [
            {
                "end": "10.6.255.254",
                "start": "10.6.0.2"
            }
        ],
        "pod-subnet-chunk-size": 32,
        "node-service-ip-pool": [
            {
                "end": "10.5.255.254",
                "start": "10.5.0.2"
            }
        ],
        "node-service-subnets": [
            "10.5.0.1/16"
        ]
    }
  host-agent-config: |-
    {
        "flavor": "kubernetes-1.24",
        "app-profile": "aci-containers-bm2aci",
        "opflex-mode": null,
        "log-level": "debug",
        "aci-snat-namespace": "aci-containers-system",
        "aci-vmm-type": "Kubernetes",
        "aci-vmm-domain": "bm2aci",
        "aci-vmm-controller": "bm2aci",
        "aci-prefix": "bm2aci",
        "aci-vrf": "sauto_l3out-1_vrf",
        "aci-vrf-tenant": "common",
        "service-vlan": 102,
        "kubeapi-vlan": 101,
        "pod-subnet": "10.6.0.1/16",
        "node-subnet": "1.100.101.1/24",
        "encap-type": "vxlan",
        "aci-infra-vlan": 4093,
        "cni-netconfig": [
            {
                "gateway": "10.6.0.1",
                "routes": [
                    {
                        "dst": "0.0.0.0/0",
                        "gw": "10.6.0.1"
                    }
                ],
                "subnet": "10.6.0.0/16"
            }
        ],
        "default-endpoint-group": {
            "policy-space": "bm2aci",
            "name": "aci-containers-bm2aci|aci-containers-default"
        },
        "namespace-default-endpoint-group": {
            "aci-containers-system": {
                "policy-space": "bm2aci",
                "name": "aci-containers-bm2aci|aci-containers-system"
            },
            "istio-operator": {
                "policy-space": "bm2aci",
                "name": "aci-containers-bm2aci|aci-containers-istio"
            },
            "istio-system": {
                "policy-space": "bm2aci",
                "name": "aci-containers-bm2aci|aci-containers-istio"
            },
            "kube-system": {
                "policy-space": "bm2aci",
                "name": "aci-containers-bm2aci|aci-containers-system"
            }        },
        "enable-drop-log": true,
        "enable-nodepodif": false,
        "enable-ovs-hw-offload": false
    }
  opflex-agent-config: |-
    {
        "log": {
            "level": "debug"
        },
        "opflex": {
            "notif" : { "enabled" : "false" }
        },
        "prometheus": {
            "enabled": "false"
        }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: snat-operator-config
  namespace: aci-containers-system
  labels:
    aci-containers-config-version: "a188341f-af1c-4894-bdf6-e68aa616ccfa"
    network-plugin: aci-containers
data:
    "start": "5000"
    "end": "65000"
    "ports-per-node": "3000"
---
apiVersion: v1
kind: Secret
metadata:
  name: aci-user-cert
  namespace: aci-containers-system
  labels:
    aci-containers-config-version: "a188341f-af1c-4894-bdf6-e68aa616ccfa"
data:
  user.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUNkUUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQWw4d2dnSmJBZ0VBQW9HQkFMc3YvYTFDblpXTTIxQkEKZFB3eXhyT2FTTWYyVm56R1FaK2k5SmNCNmRTb2RrMmRGV3U2QUE5LytVR3B5L01DTk5DZXMvWHF4b3ZuVmU4YQpESkNuSHo0T1A1UE1Nb2pmb2pKeml1QmgrNGFkUVhmU0dLNEgxNTRlUFlJdDd5c25rNkQyVXkxRXZ6NFJsNy9rCjRkS1FLRDRYZ2syMlJnQlpqUHNMNUtlVVBDdlpBZ01CQUFFQ2dZQkFGRDZ3S0VUUDVFZFRvcTBwaEt4VzRYTVcKMlBKa2htNENtd05HQ29ha29RTFdzUGFiU1RJcUhESVUwMjZaQXVGWHBXeVB1ODQ2S0hoWGdNQmFhSXVkMlJZNApsNTZrQVJyTGFaN3NCM05MTmlQVHAwUmhTc1RucWpqZ1ZIQjlBT21yWDdUbWhKbjNEai8yaXpMMTlqcmZxa29KClNDb2NyTUlFYmVjdlNzTG5jUUpCQVBKUUJueVZ5VldZTFB4azF3cWZObGVNUTdGbDBNajRBc2c4SzE5TlBqOTMKdXBZV0ZkdG56NFdaRlhXdTd5SzV0NmRsaWtnOUtneDlJMFlkMUQzcVJDMENRUURGd3ROWExNcFFXVVpESldEdgo4UHpzWEh6S1RyMXhNVTJBZUVkREdxSjFXdG1GN05rNmgzYXJPY3h2d0kwSTJSR0ZpS0pRUlZQSlZCRElFeHFuCnFqWGRBa0JQWlkxYWtUSHhTL1dobGVFb1o5YkVoUDlCUjExTUhJZTgySXBWcGRlNXNCK0JRaWRUUndhbWZleWMKTFAvS1h4UWdVNU1sN0hTMHR1UXgrMkFxRVhMWkFrQWF5V253KytzbmVRQXdaaWE4T1dzNDVNb3VhUDMyRUJTTQpXejVqMDM2LzRKOW9LWTIvQk14Skl4b1M1UVQxZHRtTnVkVXFoRWwyRXNIM0o4ZExnSjJ0QWtCYzJmbFZveHhCCkphSzNsazVwRzI3bHdFSGllT2RJRjdJVXF4dThxRWZkc1BVL0ROY3ZxUWtQOVBTaXJ5R0VhcVVKWFRLdXlDSkUKeWo2WUxFZ3pER0VWCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
  user.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI1akNDQVU4Q0FnUG9NQTBHQ1NxR1NJYjNEUUVCQlFVQU1Ec3hDekFKQmdOVkJBWVRBbFZUTVJZd0ZBWUQKVlFRS0RBMURhWE5qYnlCVGVYTjBaVzF6TVJRd0VnWURWUVFEREF0VmMyVnlJR0p0TW1GamFUQWVGdzB5TWpFdwpNRGN4TWpJek1UWmFGdzB6TWpFd01EVXdNREl6TVRaYU1Ec3hDekFKQmdOVkJBWVRBbFZUTVJZd0ZBWURWUVFLCkRBMURhWE5qYnlCVGVYTjBaVzF6TVJRd0VnWURWUVFEREF0VmMyVnlJR0p0TW1GamFUQ0JuekFOQmdrcWhraUcKOXcwQkFRRUZBQU9CalFBd2dZa0NnWUVBdXkvOXJVS2RsWXpiVUVCMC9ETEdzNXBJeC9aV2ZNWkJuNkwwbHdIcAoxS2gyVFowVmE3b0FEMy81UWFuTDh3STAwSjZ6OWVyR2krZFY3eG9Na0tjZlBnNC9rOHd5aU4raU1uT0s0R0g3CmhwMUJkOUlZcmdmWG5oNDlnaTN2S3llVG9QWlRMVVMvUGhHWHYrVGgwcEFvUGhlQ1RiWkdBRm1NK3d2a3A1UTgKSzlrQ0F3RUFBVEFOQmdrcWhraUc5dzBCQVFVRkFBT0JnUUFkVFpuNjgwNzU0S1NhOTBHQTcvRmVxMGt6WTBhOApGeXFJLzFPcGcrQjBSRUd4WndwQU9Ua1NyZ0ZwMFRWWjlsM0JLcE55VWQ3TU92RTdaSGszeGhKSFF6NzAwRzVGCmVnSXN2SDdkaFZFbnJtVmVBZkkzbk5MSTh4Zm5GcU1aL3FEMUFRQ3IwellKd3RtRTlWeEJ3bW1RUEQyM3hra2YKUjE2ZElRRUJtY1BmcUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: aci-containers-controller
  namespace: aci-containers-system
  labels:
    aci-containers-config-version: "a188341f-af1c-4894-bdf6-e68aa616ccfa"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: aci-containers-host-agent
  namespace: aci-containers-system
  labels:
    aci-containers-config-version: "a188341f-af1c-4894-bdf6-e68aa616ccfa"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    aci-containers-config-version: "a188341f-af1c-4894-bdf6-e68aa616ccfa"
    network-plugin: aci-containers
  name: aci-containers:controller
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - namespaces
  - pods
  - endpoints
  - services
  - events
  - replicationcontrollers
  - serviceaccounts
  verbs:
  - list
  - watch
  - get
  - patch
  - create
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - list
  - watch
  - get
  - create
  - update
  - delete
- apiGroups:
  - "apiextensions.k8s.io"
  resources:
  - customresourcedefinitions
  verbs:
  - '*'
- apiGroups:
  - "rbac.authorization.k8s.io"
  resources:
  - clusterroles
  - clusterrolebindings
  verbs:
  - '*'
- apiGroups:
  - "networking.k8s.io"
  resources:
  - networkpolicies
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - "apps"
  resources:
  - deployments
  - replicasets
  - daemonsets
  - statefulsets
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - nodes
  - services/status
  verbs:
  - update
- apiGroups:
  - "monitoring.coreos.com"
  resources:
  - servicemonitors
  verbs:
  - get
  - create
- apiGroups:
  - "aci.snat"
  resources:
  - snatpolicies/finalizers
  - snatpolicies/status
  - nodeinfos
  verbs:
  - update
  - create
  - list
  - watch
  - get
  - delete
- apiGroups:
  - "aci.snat"
  resources:
  - snatglobalinfos
  - snatpolicies
  - nodeinfos
  - rdconfigs
  verbs:
  - list
  - watch
  - get
  - create
  - update
  - delete
- apiGroups:
  - "aci.qos"
  resources:
  - qospolicies
  verbs:
  - list
  - watch
  - get
  - create
  - update
  - delete
  - patch
- apiGroups:
  - "aci.netflow"
  resources:
  - netflowpolicies
  verbs:
  - list
  - watch
  - get
  - update
- apiGroups:
  - "aci.erspan"
  resources:
  - erspanpolicies
  verbs:
  - list
  - watch
  - get
  - update
- apiGroups:
  - "aci.aw"
  resources:
  - nodepodifs
  verbs:
  - '*'
- apiGroups:
  - apps.openshift.io
  resources:
  - deploymentconfigs
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - "aci.netpol"
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
- apiGroups:
  - "aci.dnsnetpol"
  resources:
  - dnsnetworkpolicies
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    aci-containers-config-version: "a188341f-af1c-4894-bdf6-e68aa616ccfa"
    network-plugin: aci-containers
  name: aci-containers:host-agent
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - namespaces
  - pods
  - endpoints
  - services
  - replicationcontrollers
  verbs:
  - list
  - watch
  - get
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - "apiextensions.k8s.io"
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - "networking.k8s.io"
  resources:
  - networkpolicies
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - "apps"
  resources:
  - deployments
  - replicasets
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - "aci.snat"
  resources:
  - snatpolicies
  - snatglobalinfos
  - rdconfigs
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - "aci.qos"
  resources:
  - qospolicies
  verbs:
  - list
  - watch
  - get
  - create
  - update
  - delete
  - patch
- apiGroups:
  - "aci.droplog"
  resources:
  - enabledroplogs
  - prunedroplogs
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - "aci.snat"
  resources:
  - nodeinfos
  - snatlocalinfos
  verbs:
  - create
  - update
  - list
  - watch
  - get
  - delete
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - "aci.netpol"
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - "aci.aw"
  resources:
  - nodepodifs
  verbs:
  - "*"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: aci-containers:controller
  labels:
    aci-containers-config-version: "a188341f-af1c-4894-bdf6-e68aa616ccfa"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: aci-containers:controller
subjects:
- kind: ServiceAccount
  name: aci-containers-controller
  namespace: aci-containers-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: aci-containers:host-agent
  labels:
    aci-containers-config-version: "a188341f-af1c-4894-bdf6-e68aa616ccfa"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: aci-containers:host-agent
subjects:
- kind: ServiceAccount
  name: aci-containers-host-agent
  namespace: aci-containers-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: aci-containers-host
  namespace: aci-containers-system
  labels:
    aci-containers-config-version: "a188341f-af1c-4894-bdf6-e68aa616ccfa"
    network-plugin: aci-containers
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      name: aci-containers-host
      network-plugin: aci-containers
  template:
    metadata:
      labels:
        name: aci-containers-host
        network-plugin: aci-containers
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
        prometheus.io/scrape: "true"
        prometheus.io/port: "9612"
    spec:
      hostNetwork: true
      hostPID: true
      hostIPC: true
      serviceAccountName: aci-containers-host-agent
      imagePullSecrets:
        - name: 'noiro-docker-registry-secret'
      tolerations:
        - operator: Exists
      priorityClassName: system-cluster-critical
      containers:
        - name: aci-containers-host
          image: quay.io/noirolabs/aci-containers-host:kmr2-test
          imagePullPolicy: Always
          securityContext:
            capabilities:
              add:
                - SYS_ADMIN
                - NET_ADMIN
                - SYS_PTRACE
                - NET_RAW
          env:
            - name: GOTRACEBACK
              value: "2"
            - name: KUBERNETES_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: TENANT
              value: "bm2aci"
            - name: NODE_EPG
              value: "aci-containers-bm2aci|aci-containers-nodes"
            - name: DURATION_WAIT_FOR_NETWORK
              value: "210"
          volumeMounts:
            - name: cni-bin
              mountPath: /mnt/cni-bin
            - name: cni-conf
              mountPath: /mnt/cni-conf
            - name: hostvar
              mountPath: /usr/local/var
            - name: hostrun
              mountPath: /run
            - name: hostrun
              mountPath: /usr/local/run
            - name: opflex-hostconfig-volume
              mountPath: /usr/local/etc/opflex-agent-ovs/base-conf.d
            - name: host-config-volume
              mountPath: /usr/local/etc/aci-containers/
            - mountPath: /run/netns
              name: host-run-netns
              readOnly: true
              mountPropagation: HostToContainer
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /status
              port: 8090
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 30
        - name: opflex-agent
          env:
            - name: REBOOT_WITH_OVS
              value: "true"
          image: quay.io/noirolabs/opflex:kmr2-test
          imagePullPolicy: Always
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
          volumeMounts:
            - name: hostvar
              mountPath: /usr/local/var
            - name: hostrun
              mountPath: /run
            - name: hostrun
              mountPath: /usr/local/run
            - name: opflex-hostconfig-volume
              mountPath: /usr/local/etc/opflex-agent-ovs/base-conf.d
            - name: opflex-config-volume
              mountPath: /usr/local/etc/opflex-agent-ovs/conf.d
        - name: mcast-daemon
          image: quay.io/noirolabs/opflex:kmr2-test
          command: ["/bin/sh"]
          args: ["/usr/local/bin/launch-mcastdaemon.sh"]
          imagePullPolicy: Always
          volumeMounts:
            - name: hostvar
              mountPath: /usr/local/var
            - name: hostrun
              mountPath: /run
            - name: hostrun
              mountPath: /usr/local/run
      restartPolicy: Always
      volumes:
        - name: cni-bin
          hostPath:
            path: /opt
        - name: cni-conf
          hostPath:
            path: /etc
        - name: hostvar
          hostPath:
            path: /var
        - name: hostrun
          hostPath:
            path: /run
        - name: host-config-volume
          configMap:
            name: aci-containers-config
            items:
              - key: host-agent-config
                path: host-agent.conf
        - name: opflex-hostconfig-volume
          emptyDir:
            medium: Memory
        - name: opflex-config-volume
          configMap:
            name: aci-containers-config
            items:
              - key: opflex-agent-config
                path: local.conf
        - name: host-run-netns
          hostPath:
            path: /run/netns
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: aci-containers-openvswitch
  namespace: aci-containers-system
  labels:
    aci-containers-config-version: "a188341f-af1c-4894-bdf6-e68aa616ccfa"
    network-plugin: aci-containers
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      name: aci-containers-openvswitch
      network-plugin: aci-containers
  template:
    metadata:
      labels:
        name: aci-containers-openvswitch
        network-plugin: aci-containers
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
    spec:
      hostNetwork: true
      hostPID: true
      hostIPC: true
      serviceAccountName: aci-containers-host-agent
      imagePullSecrets:
        - name: 'noiro-docker-registry-secret'
      tolerations:
        - operator: Exists
      priorityClassName: system-cluster-critical
      containers:
        - name: aci-containers-openvswitch
          image: quay.io/noirolabs/openvswitch:kmr2-test
          imagePullPolicy: Always
          resources:
            limits:
              memory: "0.75Gi"
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
                - SYS_MODULE
                - SYS_NICE
                - IPC_LOCK
          env:
            - name: OVS_RUNDIR
              value: /usr/local/var/run/openvswitch
          volumeMounts:
            - name: hostvar
              mountPath: /usr/local/var
            - name: hostrun
              mountPath: /run
            - name: hostrun
              mountPath: /usr/local/run
            - name: hostetc
              mountPath: /usr/local/etc
            - name: hostmodules
              mountPath: /lib/modules
          livenessProbe:
            exec:
              command:
                - /usr/local/bin/liveness-ovs.sh
      restartPolicy: Always
      volumes:
        - name: hostetc
          hostPath:
            path: /etc
        - name: hostvar
          hostPath:
            path: /var
        - name: hostrun
          hostPath:
            path: /run
        - name: hostmodules
          hostPath:
            path: /lib/modules
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aci-containers-controller
  namespace: aci-containers-system
  labels:
    aci-containers-config-version: "a188341f-af1c-4894-bdf6-e68aa616ccfa"
    network-plugin: aci-containers
    name: aci-containers-controller
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      name: aci-containers-controller
      network-plugin: aci-containers
  template:
    metadata:
      name: aci-containers-controller
      namespace: aci-containers-system
      labels:
        name: aci-containers-controller
        network-plugin: aci-containers
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
    spec:
      hostNetwork: true
      serviceAccountName: aci-containers-controller
      imagePullSecrets:
        - name: 'noiro-docker-registry-secret'
      tolerations:
        - effect: NoExecute
          operator: Exists
          tolerationSeconds: 60
        - effect: NoSchedule
          key: node.kubernetes.io/not-ready
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
      priorityClassName: system-node-critical
      containers:
        - name: aci-containers-controller
          image: quay.io/noirolabs/aci-containers-controller:kmr2-test
          imagePullPolicy: Always
          env:
            - name: WATCH_NAMESPACE
              value: ""
            - name: ACI_SNAT_NAMESPACE
              value: "aci-containers-system"
            - name: ACI_SNAGLOBALINFO_NAME
              value: "snatglobalinfo"
            - name: ACI_RDCONFIG_NAME
              value: "routingdomain-config"
            - name: SYSTEM_NAMESPACE
              value: "aci-containers-system"
          volumeMounts:
            - name: controller-config-volume
              mountPath: /usr/local/etc/aci-containers/
            - name: aci-user-cert-volume
              mountPath: /usr/local/etc/aci-cert/
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /status
              port: 8091
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 30
      volumes:
        - name: aci-user-cert-volume
          secret:
            secretName: aci-user-cert
        - name: controller-config-volume
          configMap:
            name: aci-containers-config
            items:
              - key: controller-config
                path: controller.conf
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: aci-containers-operator
  namespace: aci-containers-system
  labels:
    aci-containers-config-version: "a188341f-af1c-4894-bdf6-e68aa616ccfa"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    aci-containers-config-version: "a188341f-af1c-4894-bdf6-e68aa616ccfa"
    network-plugin: aci-containers
  name: aci-containers-operator
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - '*'
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  - clusterrolebindings
  verbs:
  - '*'
- apiGroups:
  - ''
  resources:
  - nodes
  - namespaces
  - configmaps
  - secrets
  - pods
  - services
  - serviceaccounts
  - serviceaccounts/token
  - endpoints
  - events
  verbs:
  - '*'
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - "monitoring.coreos.com"
  resources:
  - servicemonitors
  verbs:
  - get
  - create
- apiGroups:
  - apps
  resources:
  - deployments
  - replicasets
  - daemonsets
  - statefulsets
  verbs:
  - '*'
- apiGroups:
  - aci.ctrl
  resources:
  - acicontainersoperators
  - acicontainersoperators/status
  - acicontainersoperators/finalizers
  verbs:
  - '*'
- apiGroups:
  - aci.ctrl
  resources:
  - accprovisioninputs
  - accprovisioninputs/status
  - accprovisioninputs/finalizers
  verbs:
  - '*'
- apiGroups:
  - scheduling.k8s.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - aci.snat
  resources:
  - snatpolicies
  - snatglobalinfos
  - rdconfigs
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - aci.snat
  resources:
  - nodeinfos
  verbs:
  - create
  - update
  - list
  - watch
  - get
- apiGroups:
  - config.openshift.io
  - operator.openshift.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - route.openshift.io
  resources:
  - routes
  verbs:
  - create
  - update
  - list
  - watch
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: aci-containers-operator
  labels:
    aci-containers-config-version: "a188341f-af1c-4894-bdf6-e68aa616ccfa"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: aci-containers-operator
subjects:
- kind: ServiceAccount
  name: aci-containers-operator
  namespace: aci-containers-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aci-containers-operator
  namespace: aci-containers-system
  labels:
    aci-containers-config-version: "a188341f-af1c-4894-bdf6-e68aa616ccfa"
    name: aci-containers-operator
    network-plugin: aci-containers
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: aci-containers-operator
      network-plugin: aci-containers
  strategy:
    type: Recreate
  template:
    metadata:
      name: aci-containers-operator
      namespace: aci-containers-system
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        name: aci-containers-operator
        network-plugin: aci-containers
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: preferred-node
                operator: In
                values:
                - aci-containers-operator-2577247291
            weight: 1
      containers:
      - image: quay.io/noirolabs/aci-containers-operator:kmr2-test
        imagePullPolicy: Always
        name: aci-containers-operator
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - name: aci-operator-config
          mountPath: /usr/local/etc/aci-containers/
        - name: acc-provision-config
          mountPath: /usr/local/etc/acc-provision/
        env:
        - name: SYSTEM_NAMESPACE
          value: "aci-containers-system"
        - name: ACC_PROVISION_FLAVOR
          value: "kubernetes-1.24"
      - env:
        - name: ANSIBLE_GATHERING
          value: explicit
        - name: WATCH_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ACC_PROVISION_FLAVOR
          value: "kubernetes-1.24"
        - name: ACC_PROVISION_INPUT_CR_NAME
          value: "accprovisioninput"
        image: quay.io/noirolabs/acc-provision-operator:kmr2-test
        imagePullPolicy: Always
        name: acc-provision-operator
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      hostNetwork: true
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: aci-containers-operator
      serviceAccountName: aci-containers-operator
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - name: aci-operator-config
        configMap:
          name: aci-operator-config
          items:
            - key: spec
              path: aci-operator.conf
      - name: acc-provision-config
        configMap:
          name: acc-provision-config
          items:
            - key: spec
              path: acc-provision-operator.conf

